{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\liisa\\\\Documents\\\\JavaScript Traning\\\\ReferenceProject\\\\visualizing_surveys\\\\src\\\\views\\\\AnswerSurvey.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Sidebar from '../components/Sidebar.js';\nimport { useNavigate } from 'react-router-dom';\nimport { useSurveyContext } from '../contexts/SurveyContext.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Dropdown from 'react-bootstrap/dropdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AnswerSurvey = () => {\n  _s();\n\n  const {\n    selectedSurvey\n  } = useSurveyContext();\n  const {\n    addAnswers\n  } = useSurveyContext();\n  const [input, setInput] = useState(\"\");\n  const [newAnswers, setNewAnswers] = useState([]);\n  const navigate = useNavigate();\n\n  const handleInput = event => {\n    setInput(event.target.value);\n  };\n\n  const handleFreetextSubmit = (question, event) => {\n    event.preventDefault();\n    const answer = {\n      id: question.questionId,\n      type: question.questionType,\n      answ: input\n    };\n    setNewAnswers(newAnswers.concat(answer));\n  };\n\n  const handleDropDown = (option, question) => {\n    const answer = {\n      id: question.questionId,\n      type: question.questionType,\n      answ: option\n    };\n    setNewAnswers(newAnswers.concat(answer));\n  };\n\n  const handleSave = event => {\n    const surveyId = selectedSurvey.id;\n    addAnswers(newAnswers, surveyId);\n    navigate(\"/thanks\", {\n      replace: true,\n      state: `Thank you for answering the ${selectedSurvey.surveyTitle} survey! Your answers have now been saved succesfully. `\n    });\n  };\n\n  const listSurveyQuestions = selectedSurvey.questions ? selectedSurvey.questions.map(question => {\n    if (question.questionType === \"freetext\") {\n      return /*#__PURE__*/_jsxDEV(Container, {\n        className: \"mb-5\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: event => handleFreetextSubmit(question, event),\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: question.questionTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              onChange: handleInput,\n              placeholder: \"Write your answer here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            type: \"submit\",\n            children: \"Save answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)\n      }, question.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 20\n      }, this);\n    } else if (question.questionType === \"dropdown\") {\n      return /*#__PURE__*/_jsxDEV(Container, {\n        className: \"mb-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: question.questionTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n            variant: \"secondary\",\n            id: \"dropdown-basic\",\n            children: [option, \" ? option : \\\"Answer options\\\"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n            children: question.dropdownQuestionOptions.map(option => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              onClick: () => handleDropDown(option, question),\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)]\n      }, question.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 20\n      }, this);\n    } else return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"monivalinnat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 23\n    }, this);\n  }) : null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"mt-5 mb-5\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mr-100\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"auto\",\n          className: \"mx-5\",\n          children: /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), selectedSurvey.surveyTitle ? /*#__PURE__*/_jsxDEV(Col, {\n          className: \"text-left resultsSheet\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Here you can answer the \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: selectedSurvey.surveyTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 57\n            }, this), \" survey\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Description of the survey:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 32\n            }, this), \" \", selectedSurvey.surveyDescription]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this), listSurveyQuestions, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSave,\n            type: \"submit\",\n            children: \"Submit Answers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Col, {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"First, choose a survey from the left sidebar to give your answer.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(AnswerSurvey, \"VGMAjBnB9WsrL/iozWyrIJAEodk=\", false, function () {\n  return [useSurveyContext, useSurveyContext, useNavigate];\n});\n\n_c = AnswerSurvey;\nexport default AnswerSurvey;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnswerSurvey\");","map":{"version":3,"names":["React","useState","Sidebar","useNavigate","useSurveyContext","Container","Col","Row","Form","Button","Dropdown","AnswerSurvey","selectedSurvey","addAnswers","input","setInput","newAnswers","setNewAnswers","navigate","handleInput","event","target","value","handleFreetextSubmit","question","preventDefault","answer","id","questionId","type","questionType","answ","concat","handleDropDown","option","handleSave","surveyId","replace","state","surveyTitle","listSurveyQuestions","questions","map","questionTitle","dropdownQuestionOptions","surveyDescription"],"sources":["C:/Users/liisa/Documents/JavaScript Traning/ReferenceProject/visualizing_surveys/src/views/AnswerSurvey.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Sidebar from '../components/Sidebar.js'\r\nimport { useNavigate} from 'react-router-dom';\r\n\r\nimport { useSurveyContext } from '../contexts/SurveyContext.js';\r\n\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Dropdown from 'react-bootstrap/dropdown';\r\n\r\n\r\nconst AnswerSurvey = () => {\r\n\r\n    const { selectedSurvey } = useSurveyContext();\r\n    const { addAnswers } = useSurveyContext();\r\n\r\n    const [input, setInput] = useState(\"\");\r\n    const [newAnswers, setNewAnswers] = useState([])\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleInput = (event) => {\r\n        setInput(event.target.value);\r\n    };\r\n\r\n    const handleFreetextSubmit = (question, event) => {\r\n        event.preventDefault();\r\n        const answer = {\r\n            id: question.questionId,\r\n            type: question.questionType,\r\n            answ: input\r\n        };\r\n        setNewAnswers(newAnswers.concat(answer));\r\n    };\r\n    const handleDropDown = (option, question) => {\r\n        const answer = {\r\n            id: question.questionId,\r\n            type: question.questionType,\r\n            answ: option\r\n        };\r\n        setNewAnswers(newAnswers.concat(answer));\r\n    };\r\n    const handleSave = (event) => {\r\n        const surveyId = selectedSurvey.id;\r\n        addAnswers(newAnswers, surveyId);  \r\n        navigate(\"/thanks\", {replace: true, state: `Thank you for answering the ${selectedSurvey.surveyTitle} survey! Your answers have now been saved succesfully. `});\r\n    };\r\n\r\n    const listSurveyQuestions = selectedSurvey.questions ? selectedSurvey.questions.map((question) => {\r\n        if (question.questionType === \"freetext\") {\r\n            return <Container key={question.id} className=\"mb-5\">\r\n                <Form onSubmit={(event) => handleFreetextSubmit(question, event)}>\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label><h5>{question.questionTitle}</h5></Form.Label>\r\n                        <Form.Control\r\n                            onChange={handleInput}\r\n                            placeholder=\"Write your answer here\" />\r\n                        <Form.Text></Form.Text>\r\n                    </Form.Group>\r\n                    <Button variant=\"secondary\" type=\"submit\">Save answer</Button>\r\n                </Form>\r\n            </Container>;\r\n\r\n        } else if (question.questionType === \"dropdown\") {\r\n            return <Container key={question.id} className=\"mb-5\">\r\n                <h5>{question.questionTitle}</h5>\r\n                <Dropdown>\r\n                    <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\r\n                        {option} ? option : \"Answer options\"\r\n                    </Dropdown.Toggle>\r\n\r\n                    <Dropdown.Menu>\r\n                        {question.dropdownQuestionOptions.map((option) => (\r\n                            <Dropdown.Item onClick={() => handleDropDown(option, question)}>{option}</Dropdown.Item>\r\n                        ))}\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            </Container>\r\n        } else return <h4>monivalinnat</h4>\r\n    }) : (null);\r\n\r\n    return (\r\n        <>\r\n            <Container fluid className=\"mt-5 mb-5\">\r\n                <Row className=\"mr-100\">\r\n                    <Col md=\"auto\" className=\"mx-5\">\r\n                        <Sidebar />\r\n                    </Col>\r\n                    {selectedSurvey.surveyTitle ?\r\n                        <Col className=\"text-left resultsSheet\">\r\n                            <h4>Here you can answer the <i>{selectedSurvey.surveyTitle}</i> survey</h4>\r\n                            <p><b>Description of the survey:</b> {selectedSurvey.surveyDescription}</p>\r\n                            {listSurveyQuestions}\r\n                        <button onClick={handleSave} type=\"submit\">Submit Answers</button>    \r\n                        </Col>\r\n                        : <Col className=\"text-center\"><h5>First, choose a survey from the left sidebar to give your answer.</h5></Col>}\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    )\r\n};\r\nexport default AnswerSurvey;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SAASC,WAAT,QAA2B,kBAA3B;AAEA,SAASC,gBAAT,QAAiC,8BAAjC;AAGA,OAAO,sCAAP;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,QAAP,MAAqB,0BAArB;;;;AAGA,MAAMC,YAAY,GAAG,MAAM;EAAA;;EAEvB,MAAM;IAAEC;EAAF,IAAqBR,gBAAgB,EAA3C;EACA,MAAM;IAAES;EAAF,IAAiBT,gBAAgB,EAAvC;EAEA,MAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACe,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,EAAD,CAA5C;EAEA,MAAMiB,QAAQ,GAAGf,WAAW,EAA5B;;EAEA,MAAMgB,WAAW,GAAIC,KAAD,IAAW;IAC3BL,QAAQ,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;EACH,CAFD;;EAIA,MAAMC,oBAAoB,GAAG,CAACC,QAAD,EAAWJ,KAAX,KAAqB;IAC9CA,KAAK,CAACK,cAAN;IACA,MAAMC,MAAM,GAAG;MACXC,EAAE,EAAEH,QAAQ,CAACI,UADF;MAEXC,IAAI,EAAEL,QAAQ,CAACM,YAFJ;MAGXC,IAAI,EAAEjB;IAHK,CAAf;IAKAG,aAAa,CAACD,UAAU,CAACgB,MAAX,CAAkBN,MAAlB,CAAD,CAAb;EACH,CARD;;EASA,MAAMO,cAAc,GAAG,CAACC,MAAD,EAASV,QAAT,KAAsB;IACzC,MAAME,MAAM,GAAG;MACXC,EAAE,EAAEH,QAAQ,CAACI,UADF;MAEXC,IAAI,EAAEL,QAAQ,CAACM,YAFJ;MAGXC,IAAI,EAAEG;IAHK,CAAf;IAKAjB,aAAa,CAACD,UAAU,CAACgB,MAAX,CAAkBN,MAAlB,CAAD,CAAb;EACH,CAPD;;EAQA,MAAMS,UAAU,GAAIf,KAAD,IAAW;IAC1B,MAAMgB,QAAQ,GAAGxB,cAAc,CAACe,EAAhC;IACAd,UAAU,CAACG,UAAD,EAAaoB,QAAb,CAAV;IACAlB,QAAQ,CAAC,SAAD,EAAY;MAACmB,OAAO,EAAE,IAAV;MAAgBC,KAAK,EAAG,+BAA8B1B,cAAc,CAAC2B,WAAY;IAAjF,CAAZ,CAAR;EACH,CAJD;;EAMA,MAAMC,mBAAmB,GAAG5B,cAAc,CAAC6B,SAAf,GAA2B7B,cAAc,CAAC6B,SAAf,CAAyBC,GAAzB,CAA8BlB,QAAD,IAAc;IAC9F,IAAIA,QAAQ,CAACM,YAAT,KAA0B,UAA9B,EAA0C;MACtC,oBAAO,QAAC,SAAD;QAA6B,SAAS,EAAC,MAAvC;QAAA,uBACH,QAAC,IAAD;UAAM,QAAQ,EAAGV,KAAD,IAAWG,oBAAoB,CAACC,QAAD,EAAWJ,KAAX,CAA/C;UAAA,wBACI,QAAC,IAAD,CAAM,KAAN;YAAY,SAAS,EAAC,MAAtB;YAAA,wBACI,QAAC,IAAD,CAAM,KAAN;cAAA,uBAAY;gBAAA,UAAKI,QAAQ,CAACmB;cAAd;gBAAA;gBAAA;gBAAA;cAAA;YAAZ;cAAA;cAAA;cAAA;YAAA,QADJ,eAEI,QAAC,IAAD,CAAM,OAAN;cACI,QAAQ,EAAExB,WADd;cAEI,WAAW,EAAC;YAFhB;cAAA;cAAA;cAAA;YAAA,QAFJ,eAKI,QAAC,IAAD,CAAM,IAAN;cAAA;cAAA;cAAA;YAAA,QALJ;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAQI,QAAC,MAAD;YAAQ,OAAO,EAAC,WAAhB;YAA4B,IAAI,EAAC,QAAjC;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QARJ;QAAA;UAAA;UAAA;UAAA;QAAA;MADG,GAAgBK,QAAQ,CAACG,EAAzB;QAAA;QAAA;QAAA;MAAA,QAAP;IAaH,CAdD,MAcO,IAAIH,QAAQ,CAACM,YAAT,KAA0B,UAA9B,EAA0C;MAC7C,oBAAO,QAAC,SAAD;QAA6B,SAAS,EAAC,MAAvC;QAAA,wBACH;UAAA,UAAKN,QAAQ,CAACmB;QAAd;UAAA;UAAA;UAAA;QAAA,QADG,eAEH,QAAC,QAAD;UAAA,wBACI,QAAC,QAAD,CAAU,MAAV;YAAiB,OAAO,EAAC,WAAzB;YAAqC,EAAE,EAAC,gBAAxC;YAAA,WACKT,MADL;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAKI,QAAC,QAAD,CAAU,IAAV;YAAA,UACKV,QAAQ,CAACoB,uBAAT,CAAiCF,GAAjC,CAAsCR,MAAD,iBAClC,QAAC,QAAD,CAAU,IAAV;cAAe,OAAO,EAAE,MAAMD,cAAc,CAACC,MAAD,EAASV,QAAT,CAA5C;cAAA,UAAiEU;YAAjE;cAAA;cAAA;cAAA;YAAA,QADH;UADL;YAAA;YAAA;YAAA;UAAA,QALJ;QAAA;UAAA;UAAA;UAAA;QAAA,QAFG;MAAA,GAAgBV,QAAQ,CAACG,EAAzB;QAAA;QAAA;QAAA;MAAA,QAAP;IAcH,CAfM,MAeA,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACV,CA/BsD,CAA3B,GA+BtB,IA/BN;EAiCA,oBACI;IAAA,uBACI,QAAC,SAAD;MAAW,KAAK,MAAhB;MAAiB,SAAS,EAAC,WAA3B;MAAA,uBACI,QAAC,GAAD;QAAK,SAAS,EAAC,QAAf;QAAA,wBACI,QAAC,GAAD;UAAK,EAAE,EAAC,MAAR;UAAe,SAAS,EAAC,MAAzB;UAAA,uBACI,QAAC,OAAD;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QADJ,EAIKf,cAAc,CAAC2B,WAAf,gBACG,QAAC,GAAD;UAAK,SAAS,EAAC,wBAAf;UAAA,wBACI;YAAA,oDAA4B;cAAA,UAAI3B,cAAc,CAAC2B;YAAnB;cAAA;cAAA;cAAA;YAAA,QAA5B;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI;YAAA,wBAAG;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAH,OAAsC3B,cAAc,CAACiC,iBAArD;UAAA;YAAA;YAAA;YAAA;UAAA,QAFJ,EAGKL,mBAHL,eAIA;YAAQ,OAAO,EAAEL,UAAjB;YAA6B,IAAI,EAAC,QAAlC;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAJA;QAAA;UAAA;UAAA;UAAA;QAAA,QADH,gBAOK,QAAC,GAAD;UAAK,SAAS,EAAC,aAAf;UAAA,uBAA6B;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAA7B;UAAA;UAAA;UAAA;QAAA,QAXV;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADJ,iBADJ;AAmBH,CAzFD;;GAAMxB,Y;UAEyBP,gB,EACJA,gB,EAKND,W;;;KARfQ,Y;AA0FN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}