{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\liisa\\\\Documents\\\\Koodit\\\\portfolio\\\\CodePortfolio\\\\surveysApp_javascript\\\\surveys_front\\\\src\\\\components\\\\charts\\\\PolarAreaChart.js\",\n    _s = $RefreshSig$();\n\nimport { Chart as ChartJS, RadialLinearScale, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { PolarArea } from 'react-chartjs-2';\nimport { useSurveyContext } from '../../contexts/SurveyContext.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(RadialLinearScale, ArcElement, Tooltip, Legend);\n\nconst PolarAreaChart = props => {\n  _s();\n\n  const {\n    selectedSurvey\n  } = useSurveyContext();\n  const selectedQuestion = selectedSurvey.questions.filter(q => q.questionId === props.question);\n  const type = selectedQuestion[0].questionType;\n  let surveyAnswers = [];\n  type === \"dropdown\" ? surveyAnswers = selectedSurvey.answers.map(a => a[props.question]) : surveyAnswers = selectedSurvey.answers.map(a => {\n    if (a[props.question] !== undefined) {\n      surveyAnswers = [...surveyAnswers, ...a[props.question]];\n    }\n\n    return surveyAnswers;\n  });\n  let multipleChoiceAnswers = [];\n\n  if (type === \"multiple-choice\") {\n    multipleChoiceAnswers = surveyAnswers.pop().filter(answ => answ !== null);\n  }\n\n  let answerLabels = [];\n  type === \"dropdown\" ? answerLabels = [...new Set(surveyAnswers)] : answerLabels = [...new Set(multipleChoiceAnswers)];\n  let answerCounts = [];\n  type === \"dropdown\" ? answerCounts = answerLabels.map(label => {\n    const filtered = surveyAnswers.filter(answer => answer === label);\n    return filtered.length;\n  }) : answerCounts = answerLabels.map(label => {\n    const filtered = multipleChoiceAnswers.filter(answer => answer === label);\n    return filtered.length;\n  });\n  const data = {\n    labels: answerLabels,\n    datasets: [{\n      label: '# of Votes',\n      data: answerCounts,\n      backgroundColor: ['rgba(255, 99, 132, 0.5)', 'rgba(54, 12, 235, 0.5)', 'rgba(255, 20, 86, 0.5)', 'rgba(75, 192, 12, 0.5)', 'rgba(153, 102, 255, 0.5)', 'rgba(255, 159, 64, 0.5)'],\n      borderWidth: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(PolarArea, {\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PolarAreaChart, \"ca3SUvhwJ6PJ55LPQ0pHj/7bvY4=\", false, function () {\n  return [useSurveyContext];\n});\n\n_c = PolarAreaChart;\nexport default PolarAreaChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"PolarAreaChart\");","map":{"version":3,"names":["Chart","ChartJS","RadialLinearScale","ArcElement","Tooltip","Legend","PolarArea","useSurveyContext","register","PolarAreaChart","props","selectedSurvey","selectedQuestion","questions","filter","q","questionId","question","type","questionType","surveyAnswers","answers","map","a","undefined","multipleChoiceAnswers","pop","answ","answerLabels","Set","answerCounts","label","filtered","answer","length","data","labels","datasets","backgroundColor","borderWidth"],"sources":["C:/Users/liisa/Documents/Koodit/portfolio/CodePortfolio/surveysApp_javascript/surveys_front/src/components/charts/PolarAreaChart.js"],"sourcesContent":["import { Chart as ChartJS, RadialLinearScale, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport { PolarArea } from 'react-chartjs-2';\r\nimport { useSurveyContext } from '../../contexts/SurveyContext.js';\r\n\r\nChartJS.register(RadialLinearScale, ArcElement, Tooltip, Legend);\r\n\r\nconst PolarAreaChart = (props) => {\r\n\r\n    const { selectedSurvey } = useSurveyContext();\r\n\r\n    const selectedQuestion = selectedSurvey.questions.filter(q => q.questionId === props.question);\r\n    const type = selectedQuestion[0].questionType;\r\n\r\n    let surveyAnswers = []\r\n    type === \"dropdown\" ?\r\n        surveyAnswers = selectedSurvey.answers.map(a => a[props.question])\r\n        : surveyAnswers = selectedSurvey.answers.map(a => {\r\n            if (a[props.question] !== undefined) {\r\n                surveyAnswers = [...surveyAnswers, ...a[props.question]];\r\n            }\r\n            return surveyAnswers\r\n        });\r\n\r\n    let multipleChoiceAnswers = []\r\n    if (type === \"multiple-choice\") {\r\n        multipleChoiceAnswers = surveyAnswers.pop().filter(answ => answ !== null);\r\n    }\r\n    \r\n    let answerLabels = []\r\n    type === \"dropdown\" ? answerLabels = [...new Set(surveyAnswers)] : answerLabels = [...new Set(multipleChoiceAnswers)];\r\n\r\n    let answerCounts = []\r\n    type === \"dropdown\" ?\r\n        answerCounts = answerLabels.map(label => {\r\n            const filtered = surveyAnswers.filter(answer => answer === label);\r\n            return filtered.length;\r\n        })\r\n        \r\n        : answerCounts = answerLabels.map(label => {\r\n            const filtered = multipleChoiceAnswers.filter(answer => answer === label);\r\n            return filtered.length\r\n        });\r\n\r\n    const data = {\r\n        labels: answerLabels,\r\n        datasets: [\r\n          {\r\n            label: '# of Votes',\r\n            data: answerCounts,\r\n            backgroundColor: [\r\n              'rgba(255, 99, 132, 0.5)',\r\n              'rgba(54, 12, 235, 0.5)',\r\n              'rgba(255, 20, 86, 0.5)',\r\n              'rgba(75, 192, 12, 0.5)',\r\n              'rgba(153, 102, 255, 0.5)',\r\n              'rgba(255, 159, 64, 0.5)',\r\n            ],\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      };\r\n      \r\n      return (\r\n        <PolarArea data={data} />\r\n      ) \r\n}\r\n\r\nexport default PolarAreaChart\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;;AAAA,SAASA,KAAK,IAAIC,OAAlB,EAA2BC,iBAA3B,EAA8CC,UAA9C,EAA0DC,OAA1D,EAAmEC,MAAnE,QAAiF,UAAjF;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,gBAAT,QAAiC,iCAAjC;;AAEAN,OAAO,CAACO,QAAR,CAAiBN,iBAAjB,EAAoCC,UAApC,EAAgDC,OAAhD,EAAyDC,MAAzD;;AAEA,MAAMI,cAAc,GAAIC,KAAD,IAAW;EAAA;;EAE9B,MAAM;IAAEC;EAAF,IAAqBJ,gBAAgB,EAA3C;EAEA,MAAMK,gBAAgB,GAAGD,cAAc,CAACE,SAAf,CAAyBC,MAAzB,CAAgCC,CAAC,IAAIA,CAAC,CAACC,UAAF,KAAiBN,KAAK,CAACO,QAA5D,CAAzB;EACA,MAAMC,IAAI,GAAGN,gBAAgB,CAAC,CAAD,CAAhB,CAAoBO,YAAjC;EAEA,IAAIC,aAAa,GAAG,EAApB;EACAF,IAAI,KAAK,UAAT,GACIE,aAAa,GAAGT,cAAc,CAACU,OAAf,CAAuBC,GAAvB,CAA2BC,CAAC,IAAIA,CAAC,CAACb,KAAK,CAACO,QAAP,CAAjC,CADpB,GAEMG,aAAa,GAAGT,cAAc,CAACU,OAAf,CAAuBC,GAAvB,CAA2BC,CAAC,IAAI;IAC9C,IAAIA,CAAC,CAACb,KAAK,CAACO,QAAP,CAAD,KAAsBO,SAA1B,EAAqC;MACjCJ,aAAa,GAAG,CAAC,GAAGA,aAAJ,EAAmB,GAAGG,CAAC,CAACb,KAAK,CAACO,QAAP,CAAvB,CAAhB;IACH;;IACD,OAAOG,aAAP;EACH,CALiB,CAFtB;EASA,IAAIK,qBAAqB,GAAG,EAA5B;;EACA,IAAIP,IAAI,KAAK,iBAAb,EAAgC;IAC5BO,qBAAqB,GAAGL,aAAa,CAACM,GAAd,GAAoBZ,MAApB,CAA2Ba,IAAI,IAAIA,IAAI,KAAK,IAA5C,CAAxB;EACH;;EAED,IAAIC,YAAY,GAAG,EAAnB;EACAV,IAAI,KAAK,UAAT,GAAsBU,YAAY,GAAG,CAAC,GAAG,IAAIC,GAAJ,CAAQT,aAAR,CAAJ,CAArC,GAAmEQ,YAAY,GAAG,CAAC,GAAG,IAAIC,GAAJ,CAAQJ,qBAAR,CAAJ,CAAlF;EAEA,IAAIK,YAAY,GAAG,EAAnB;EACAZ,IAAI,KAAK,UAAT,GACIY,YAAY,GAAGF,YAAY,CAACN,GAAb,CAAiBS,KAAK,IAAI;IACrC,MAAMC,QAAQ,GAAGZ,aAAa,CAACN,MAAd,CAAqBmB,MAAM,IAAIA,MAAM,KAAKF,KAA1C,CAAjB;IACA,OAAOC,QAAQ,CAACE,MAAhB;EACH,CAHc,CADnB,GAMMJ,YAAY,GAAGF,YAAY,CAACN,GAAb,CAAiBS,KAAK,IAAI;IACvC,MAAMC,QAAQ,GAAGP,qBAAqB,CAACX,MAAtB,CAA6BmB,MAAM,IAAIA,MAAM,KAAKF,KAAlD,CAAjB;IACA,OAAOC,QAAQ,CAACE,MAAhB;EACH,CAHgB,CANrB;EAWA,MAAMC,IAAI,GAAG;IACTC,MAAM,EAAER,YADC;IAETS,QAAQ,EAAE,CACR;MACEN,KAAK,EAAE,YADT;MAEEI,IAAI,EAAEL,YAFR;MAGEQ,eAAe,EAAE,CACf,yBADe,EAEf,wBAFe,EAGf,wBAHe,EAIf,wBAJe,EAKf,0BALe,EAMf,yBANe,CAHnB;MAWEC,WAAW,EAAE;IAXf,CADQ;EAFD,CAAb;EAmBE,oBACE,QAAC,SAAD;IAAW,IAAI,EAAEJ;EAAjB;IAAA;IAAA;IAAA;EAAA,QADF;AAGL,CA3DD;;GAAM1B,c;UAEyBF,gB;;;KAFzBE,c;AA6DN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}