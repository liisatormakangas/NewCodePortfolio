{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\liisa\\\\Documents\\\\JavaScript Traning\\\\ReferenceProject\\\\visualizing_surveys\\\\src\\\\views\\\\AnswerSurvey.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Sidebar from '../components/Sidebar.js';\nimport { useSurveyContext } from '../contexts/SurveyContext.js';\nimport \"./results.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AnswerSurvey = () => {\n  _s();\n\n  const {\n    selectedSurvey\n  } = useSurveyContext();\n  const questions = selectedSurvey.questions;\n  console.log(questions);\n  /**    \r\n      const [input, setInput] = useState(\"\");\r\n  \r\n      const handleInput = (event) => {\r\n          setInput(event.target.value);\r\n      };\r\n  \r\n      const handleFreetextSubmit = (event) => {\r\n          event.preventDefault();\r\n  \r\n      }\r\n  \r\n  \r\n      const surveyQuestions = questions.map((question, index) => {\r\n          if (question.questionType === \"freetext\") {\r\n              return <div key={index}>\r\n                  <Form onSubmit={handleFreetextSubmit}>\r\n                      <Form.Group className=\"mb-3\">\r\n                          <Form.Label>{question.questionTitle}:</Form.Label>\r\n                          <Form.Control onChange={handleInput}\r\n                              value={input}\r\n                              placeholder=\"Write your answer here\" />\r\n                          <Form.Text className=\"text-muted\"></Form.Text>\r\n                      </Form.Group>\r\n                      <Button variant=\"primary\" type=\"submit\">Save answer</Button>\r\n                  </Form>\r\n                  </div>;\r\n          } else if (question.questionType === \"dropdown\") {\r\n              return <h4>Dropdowv here</h4>\r\n          } else return <h4>monivalinnat</h4>\r\n      })\r\n      )\r\n       */\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"mt-5\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mr-100\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"auto\",\n          className: \"mx-5\",\n          children: /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"text-center resultsSheet\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Here you can answer the \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: selectedSurvey.surveyTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 53\n            }, this), \" survey\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Description of the survey:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 28\n            }, this), \" \", selectedSurvey.surveyDescription]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), selectedSurvey ? selectedSurvey.questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: question.questionTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: question.questionType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(AnswerSurvey, \"ca3SUvhwJ6PJ55LPQ0pHj/7bvY4=\", false, function () {\n  return [useSurveyContext];\n});\n\n_c = AnswerSurvey;\nexport default AnswerSurvey;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnswerSurvey\");","map":{"version":3,"names":["React","useState","Sidebar","useSurveyContext","Container","Col","Row","Form","Button","AnswerSurvey","selectedSurvey","questions","console","log","surveyTitle","surveyDescription","map","question","questionTitle","questionType"],"sources":["C:/Users/liisa/Documents/JavaScript Traning/ReferenceProject/visualizing_surveys/src/views/AnswerSurvey.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Sidebar from '../components/Sidebar.js'\r\n\r\nimport { useSurveyContext } from '../contexts/SurveyContext.js';\r\nimport \"./results.css\"\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nconst AnswerSurvey = () => {\r\n\r\n    const { selectedSurvey } = useSurveyContext();\r\n    const questions = selectedSurvey.questions;\r\n    console.log(questions);\r\n/**    \r\n    const [input, setInput] = useState(\"\");\r\n\r\n    const handleInput = (event) => {\r\n        setInput(event.target.value);\r\n    };\r\n\r\n    const handleFreetextSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n\r\n    const surveyQuestions = questions.map((question, index) => {\r\n        if (question.questionType === \"freetext\") {\r\n            return <div key={index}>\r\n                <Form onSubmit={handleFreetextSubmit}>\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label>{question.questionTitle}:</Form.Label>\r\n                        <Form.Control onChange={handleInput}\r\n                            value={input}\r\n                            placeholder=\"Write your answer here\" />\r\n                        <Form.Text className=\"text-muted\"></Form.Text>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">Save answer</Button>\r\n                </Form>\r\n                </div>;\r\n        } else if (question.questionType === \"dropdown\") {\r\n            return <h4>Dropdowv here</h4>\r\n        } else return <h4>monivalinnat</h4>\r\n    })\r\n    )\r\n     */\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Container fluid className=\"mt-5\">\r\n                <Row className=\"mr-100\">\r\n                    <Col md=\"auto\" className=\"mx-5\">\r\n                        <Sidebar />\r\n                    </Col>\r\n                    <Col className=\"text-center resultsSheet\">\r\n                        <h5>Here you can answer the <i>{selectedSurvey.surveyTitle}</i> survey</h5>\r\n                        <p><b>Description of the survey:</b> {selectedSurvey.surveyDescription}</p>\r\n                    </Col>\r\n                    {(selectedSurvey) ? selectedSurvey.questions.map((question) =>\r\n                        <div>\r\n                            <p>{question.questionTitle}</p>\r\n                            <p>{question.questionType}</p>\r\n                        </div>\r\n                    )\r\n                    : null}\r\n                </Row>\r\n            </Container>\r\n        </>\r\n\r\n    )\r\n};\r\n\r\nexport default AnswerSurvey"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,0BAApB;AAEA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,OAAO,eAAP;AAEA,OAAO,sCAAP;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;;;AAGA,MAAMC,YAAY,GAAG,MAAM;EAAA;;EAEvB,MAAM;IAAEC;EAAF,IAAqBP,gBAAgB,EAA3C;EACA,MAAMQ,SAAS,GAAGD,cAAc,CAACC,SAAjC;EACAC,OAAO,CAACC,GAAR,CAAYF,SAAZ;EACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAKI,oBACI;IAAA,uBACI,QAAC,SAAD;MAAW,KAAK,MAAhB;MAAiB,SAAS,EAAC,MAA3B;MAAA,uBACI,QAAC,GAAD;QAAK,SAAS,EAAC,QAAf;QAAA,wBACI,QAAC,GAAD;UAAK,EAAE,EAAC,MAAR;UAAe,SAAS,EAAC,MAAzB;UAAA,uBACI,QAAC,OAAD;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QADJ,eAII,QAAC,GAAD;UAAK,SAAS,EAAC,0BAAf;UAAA,wBACI;YAAA,oDAA4B;cAAA,UAAID,cAAc,CAACI;YAAnB;cAAA;cAAA;cAAA;YAAA,QAA5B;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI;YAAA,wBAAG;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAH,OAAsCJ,cAAc,CAACK,iBAArD;UAAA;YAAA;YAAA;YAAA;UAAA,QAFJ;QAAA;UAAA;UAAA;UAAA;QAAA,QAJJ,EAQML,cAAD,GAAmBA,cAAc,CAACC,SAAf,CAAyBK,GAAzB,CAA8BC,QAAD,iBAC7C;UAAA,wBACI;YAAA,UAAIA,QAAQ,CAACC;UAAb;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI;YAAA,UAAID,QAAQ,CAACE;UAAb;YAAA;YAAA;YAAA;UAAA,QAFJ;QAAA;UAAA;UAAA;UAAA;QAAA,QADgB,CAAnB,GAMC,IAdN;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADJ,iBADJ;AAuBH,CAjED;;GAAMV,Y;UAEyBN,gB;;;KAFzBM,Y;AAmEN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}