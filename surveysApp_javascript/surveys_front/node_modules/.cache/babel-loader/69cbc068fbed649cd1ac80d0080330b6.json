{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\liisa\\\\Documents\\\\JavaScript Traning\\\\ReferenceProject\\\\visualizing_surveys\\\\src\\\\views\\\\CreateSurvey.js\",\n    _s = $RefreshSig$();\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport AddInput from '../components/AddInput.js';\nimport AddDropdown from '../components/AddDropdown.js';\nimport AddFreetext from '../components/AddFreetext.js';\nimport Sidebar from '../components/Sidebar.js';\nimport { useSurveyContext } from \"../contexts/SurveyContext.js\";\nimport Container from 'react-bootstrap/Container';\nimport Stack from 'react-bootstrap/Stack';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport { Trash, Pencil } from 'react-bootstrap-icons';\nimport React, { useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreateSurvey = () => {\n  _s();\n\n  const {\n    getNewId,\n    addSurvey,\n    selectedSurvey,\n    setSelectedSurvey,\n    modifiedSurvey\n  } = useSurveyContext();\n  const [questionType, setQuestionType] = useState(\"\");\n  const [modifyIsActive, setModifyIsActive] = useState(false);\n  const navigate = useNavigate();\n  const surveyState = selectedSurvey.surveyTitle ? {\n    surveyTitle: selectedSurvey.surveyTitle,\n    surveyDescription: selectedSurvey.surveyDescription,\n    questions: selectedSurvey.questions,\n    answers: selectedSurvey.answers,\n    id: selectedSurvey.id\n  } : {\n    surveyTitle: \"\",\n    surveyDescription: \"\",\n    questions: [],\n    answers: []\n  };\n  const [newSurvey, setNewSurvey] = useState(surveyState);\n\n  const handleClick = type => {\n    setQuestionType(type);\n  };\n\n  const createSurveyTitle = event => {\n    setNewSurvey({ ...newSurvey,\n      surveyTitle: event.target.value\n    });\n  };\n\n  const createSurveyDescription = event => {\n    setNewSurvey({ ...newSurvey,\n      surveyDescription: event.target.value\n    });\n  };\n\n  const createQuestion = (questionTitle, dropdownQuestionOptions, questionType) => {\n    const newQuestion = {\n      questionTitle,\n      dropdownQuestionOptions,\n      questionType,\n      questionId: getNewId()\n    };\n    setNewSurvey({ ...newSurvey,\n      questions: [...newSurvey.questions, newQuestion]\n    });\n  };\n\n  const removeQuestion = question => {\n    const remainingQuestions = newSurvey.questions.filter(item => item.id !== question.id);\n    setNewSurvey({ ...newSurvey,\n      questions: remainingQuestions\n    });\n  };\n\n  const handleSave = newSurvey => {\n    return modifyIsActive ? modifySurvey(newSurvey) : addNewSurvey(newSurvey);\n  };\n\n  const modifySurvey = newSurvey => {\n    modifiedSurvey(newSurvey, selectedSurvey.id);\n    setSelectedSurvey({});\n    navigate(\"/thanks\", {\n      replace: true,\n      state: `The modified survey has now been saved succesfully.`\n    });\n  };\n\n  const addNewSurvey = newSurvey => {\n    addSurvey(newSurvey);\n    setSelectedSurvey({});\n    navigate(\"/thanks\", {\n      replace: true,\n      state: `Thank you for creating the ${newSurvey.surveyTitle} survey! The survey has now been saved succesfully.`\n    });\n  };\n\n  console.log(newSurvey);\n  console.log(selectedSurvey.surveyTitle);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-4 text-left\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"To modify or delete an existing survey:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setModifyIsActive(true),\n        variant: \"outline-secondary\",\n        children: \"Modify/delete an existing survey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"mt-5\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [modifyIsActive ? /*#__PURE__*/_jsxDEV(Col, {\n          sm: 3,\n          className: \"mx-5\",\n          children: /*#__PURE__*/_jsxDEV(Sidebar, {\n            modifyIsActive: modifyIsActive\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Col, {\n          sm: 2,\n          className: \"mx-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 6,\n          className: \"text-left mx-5\",\n          children: [modifyIsActive ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: selectedSurvey.surveyTitle ? /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Modify: \", /*#__PURE__*/_jsxDEV(\"i\", {\n                children: selectedSurvey.surveyTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 75\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 63\n            }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Select a survey to modify from the left sidebar by clicking a survey name. If you want to delete a survey, use the trash-icon.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"To create a question, choose what kind of a question do you want to use. The question types are: dropdown, multiple choices and free text.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            gap: 3,\n            children: [/*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Give your survey a short and descriptive title:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                onChange: createSurveyTitle,\n                type: \"text\",\n                defaultValue: newSurvey.surveyTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Write a short description of the survey:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"textarea\",\n                onChange: createSurveyDescription,\n                rows: 3,\n                defaultValue: newSurvey.surveyDescription\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this), newSurvey.questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(ListGroup, {\n                children: /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  className: \"list-group-item d-flex justify-content-between align-items-start mt-2\",\n                  children: [/*#__PURE__*/_jsxDEV(Form, {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: /*#__PURE__*/_jsxDEV(\"b\", {\n                        children: [\"Question \", newSurvey.questions.indexOf(question) + 1, \". (\", question.questionType, \")\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 144,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 144,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      value: question.questionTitle\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 145,\n                      columnNumber: 49\n                    }, this), question.dropdownQuestionOptions ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                        children: \"Dropdown options: \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 148,\n                        columnNumber: 53\n                      }, this), question.dropdownQuestionOptions.map(option => {\n                        form;\n                      })]\n                    }, void 0, true) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                    \"aria-label\": \"Edit tools\",\n                    children: [/*#__PURE__*/_jsxDEV(OverlayTrigger, {\n                      placement: \"top\",\n                      overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n                        id: \"edit\",\n                        children: \"Edit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 156,\n                        columnNumber: 101\n                      }, this),\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        size: \"sm\",\n                        variant: \"light\",\n                        children: /*#__PURE__*/_jsxDEV(Pencil, {\n                          className: \"bi bi-pencil\",\n                          size: 20\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 158,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 157,\n                        columnNumber: 53\n                      }, this)\n                    }, \"edit\", false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 156,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n                      placement: \"top\",\n                      overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n                        id: \"delete\",\n                        children: \"Delete\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 162,\n                        columnNumber: 62\n                      }, this),\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        onClick: () => removeQuestion(question),\n                        size: \"sm\",\n                        variant: \"light\",\n                        children: /*#__PURE__*/_jsxDEV(Trash, {\n                          className: \"bi bi-trash\",\n                          size: 20\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 164,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 163,\n                        columnNumber: 53\n                      }, this)\n                    }, \"delete\", false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 161,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 37\n              }, this)\n            }, question.questionTitle, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 33\n            }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Choose what kind of a question to add:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              gap: 1,\n              \"aria-label\": \"Basic example\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleClick(\"dropdown\"),\n                variant: \"primary\",\n                children: \"Dropdown + \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleClick(\"input\"),\n                variant: \"primary\",\n                children: \"Multiple choice + \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleClick(\"freetext\"),\n                variant: \"primary\",\n                children: \"Free text + \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [questionType === \"dropdown\" ? /*#__PURE__*/_jsxDEV(AddDropdown, {\n                createQuestion: createQuestion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 66\n              }, this) : null, questionType === \"input\" ? /*#__PURE__*/_jsxDEV(AddInput, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 63\n              }, this) : null, questionType === \"freetext\" ? /*#__PURE__*/_jsxDEV(AddFreetext, {\n                createQuestion: createQuestion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 66\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSave(newSurvey),\n              type: \"submit\",\n              children: \"Submit survey\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CreateSurvey, \"WWIJ0sZf23UDksIlm7FYSmJyJhI=\", false, function () {\n  return [useSurveyContext, useNavigate];\n});\n\n_c = CreateSurvey;\nexport default CreateSurvey;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateSurvey\");","map":{"version":3,"names":["AddInput","AddDropdown","AddFreetext","Sidebar","useSurveyContext","Container","Stack","Form","Row","Col","Button","ButtonGroup","ListGroup","OverlayTrigger","Tooltip","Trash","Pencil","React","useState","useNavigate","CreateSurvey","getNewId","addSurvey","selectedSurvey","setSelectedSurvey","modifiedSurvey","questionType","setQuestionType","modifyIsActive","setModifyIsActive","navigate","surveyState","surveyTitle","surveyDescription","questions","answers","id","newSurvey","setNewSurvey","handleClick","type","createSurveyTitle","event","target","value","createSurveyDescription","createQuestion","questionTitle","dropdownQuestionOptions","newQuestion","questionId","removeQuestion","question","remainingQuestions","filter","item","handleSave","modifySurvey","addNewSurvey","replace","state","console","log","map","indexOf","option","form"],"sources":["C:/Users/liisa/Documents/JavaScript Traning/ReferenceProject/visualizing_surveys/src/views/CreateSurvey.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport AddInput from '../components/AddInput.js';\r\nimport AddDropdown from '../components/AddDropdown.js';\r\nimport AddFreetext from '../components/AddFreetext.js';\r\nimport Sidebar from '../components/Sidebar.js'\r\n\r\nimport { useSurveyContext } from \"../contexts/SurveyContext.js\";\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Stack from 'react-bootstrap/Stack';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\nimport { Trash, Pencil } from 'react-bootstrap-icons';\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nconst CreateSurvey = () => {\r\n\r\n    const { getNewId, addSurvey, selectedSurvey, setSelectedSurvey, modifiedSurvey } = useSurveyContext();\r\n\r\n    const [questionType, setQuestionType] = useState(\"\");\r\n\r\n    const [modifyIsActive, setModifyIsActive] = useState(false);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const surveyState = selectedSurvey.surveyTitle ? {\r\n        surveyTitle: selectedSurvey.surveyTitle,\r\n        surveyDescription: selectedSurvey.surveyDescription,\r\n        questions: selectedSurvey.questions,\r\n        answers: selectedSurvey.answers,\r\n        id: selectedSurvey.id\r\n    } : {\r\n        surveyTitle: \"\",\r\n        surveyDescription: \"\",\r\n        questions: [],\r\n        answers: []\r\n    };\r\n    \r\n    const [newSurvey, setNewSurvey] = useState(surveyState);\r\n\r\n    const handleClick = (type) => {\r\n        setQuestionType(type);\r\n    };\r\n\r\n    const createSurveyTitle = (event) => {\r\n        setNewSurvey({ ...newSurvey, surveyTitle: event.target.value });\r\n    };\r\n\r\n    const createSurveyDescription = (event) => {\r\n        setNewSurvey({ ...newSurvey, surveyDescription: event.target.value });        \r\n    };\r\n\r\n    const createQuestion = (questionTitle, dropdownQuestionOptions, questionType) => {\r\n        const newQuestion = {\r\n            questionTitle,\r\n            dropdownQuestionOptions,\r\n            questionType,\r\n            questionId: getNewId()\r\n        };\r\n        setNewSurvey({\r\n            ...newSurvey,\r\n            questions: [...newSurvey.questions, newQuestion]\r\n        });\r\n    };\r\n\r\n    const removeQuestion = (question) => {\r\n        const remainingQuestions = newSurvey.questions.filter((item) => item.id !== question.id);\r\n        setNewSurvey({\r\n            ...newSurvey,\r\n            questions: remainingQuestions\r\n        });\r\n    };\r\n\r\n    const handleSave = (newSurvey) => {\r\n        return modifyIsActive ? modifySurvey(newSurvey) : addNewSurvey(newSurvey)\r\n    };\r\n\r\n    const modifySurvey = (newSurvey) => {\r\n        modifiedSurvey(newSurvey, selectedSurvey.id)\r\n        setSelectedSurvey({});\r\n        navigate(\"/thanks\", { replace: true, state: `The modified survey has now been saved succesfully.` });\r\n    };\r\n\r\n    const addNewSurvey = (newSurvey) => {\r\n        addSurvey(newSurvey);\r\n        setSelectedSurvey({});\r\n        navigate(\"/thanks\", { replace: true, state: `Thank you for creating the ${newSurvey.surveyTitle} survey! The survey has now been saved succesfully.` });\r\n    };\r\n   \r\n    console.log(newSurvey);\r\n    console.log(selectedSurvey.surveyTitle);\r\n\r\n    return (\r\n        <>\r\n            <Container className='mt-4 text-left'>\r\n                <h5>To modify or delete an existing survey:</h5>\r\n                <Button onClick={() => setModifyIsActive(true)} variant=\"outline-secondary\">Modify/delete an existing survey</Button>{' '}\r\n            </Container>\r\n\r\n            <Container fluid className=\"mt-5\">\r\n                <Row>\r\n                    {modifyIsActive ?\r\n                        <Col sm={3} className=\"mx-5\">\r\n                            <Sidebar modifyIsActive={modifyIsActive} />\r\n                        </Col>\r\n                        : <Col sm={2} className=\"mx-5\"></Col>}\r\n                    <Col sm={6} className='text-left mx-5'>\r\n                        {modifyIsActive ?\r\n                            <div>\r\n                                {selectedSurvey.surveyTitle ? <h4>Modify: <i>{selectedSurvey.surveyTitle}</i></h4>\r\n                                    : <h4>Select a survey to modify from the left sidebar by clicking a survey name. If you want to delete a survey, use the trash-icon.</h4>}\r\n                            </div>\r\n                            :\r\n                            <h4>To create a question, choose what kind of a question do you want to use.\r\n                                The question types are: dropdown, multiple choices and free text.</h4>}\r\n\r\n                        <Stack gap={3}>\r\n                            <Form>\r\n                                <Form.Label>Give your survey a short and descriptive title:</Form.Label>\r\n                                <Form.Control onChange={createSurveyTitle} type=\"text\" defaultValue={newSurvey.surveyTitle} />\r\n\r\n                                <Form.Label>Write a short description of the survey:</Form.Label>\r\n                                <Form.Control as=\"textarea\" onChange={createSurveyDescription} rows={3}\r\n                                    defaultValue={newSurvey.surveyDescription} />\r\n                            </Form>\r\n\r\n                            {newSurvey.questions.map(question =>\r\n                                <div key={question.questionTitle}>\r\n                                    <ListGroup>\r\n                                        <ListGroup.Item className=\"list-group-item d-flex justify-content-between align-items-start mt-2\">\r\n                                            <Form>\r\n                                                <Form.Label><b>Question {newSurvey.questions.indexOf(question) + 1}. ({question.questionType})</b></Form.Label>\r\n                                                <Form.Control value={question.questionTitle} />\r\n                                                {(question.dropdownQuestionOptions) ?\r\n                                                    <>\r\n                                                    <Form.Label>Dropdown options: </Form.Label>\r\n                                                    {question.dropdownQuestionOptions.map(option => {\r\n                                                        form\r\n                                                    })}\r\n                                                    </>\r\n                                                    : (null)}\r\n                                            </Form>\r\n                                            <ButtonGroup aria-label=\"Edit tools\">\r\n                                                <OverlayTrigger key=\"edit\" placement=\"top\" overlay={<Tooltip id=\"edit\">Edit</Tooltip>}>\r\n                                                    <Button size=\"sm\" variant=\"light\">\r\n                                                        <Pencil className='bi bi-pencil' size={20}></Pencil>\r\n                                                    </Button>\r\n                                                </OverlayTrigger>\r\n                                                <OverlayTrigger key=\"delete\" placement=\"top\"\r\n                                                    overlay={<Tooltip id=\"delete\">Delete</Tooltip>}>\r\n                                                    <Button onClick={() => removeQuestion(question)} size=\"sm\" variant=\"light\">\r\n                                                        <Trash className='bi bi-trash' size={20}></Trash>\r\n                                                    </Button>\r\n                                                </OverlayTrigger>\r\n                                            </ButtonGroup>\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </div>\r\n                            )}\r\n                            <p>Choose what kind of a question to add:</p>\r\n\r\n                            <ButtonGroup gap={1} aria-label=\"Basic example\">\r\n                                <Button onClick={() => handleClick(\"dropdown\")} variant=\"primary\">Dropdown + </Button>\r\n                                <Button onClick={() => handleClick(\"input\")} variant=\"primary\">Multiple choice + </Button>\r\n                                <Button onClick={() => handleClick(\"freetext\")} variant=\"primary\">Free text + </Button>\r\n                            </ButtonGroup>\r\n                            <div>\r\n                                {(questionType === \"dropdown\") ? <AddDropdown createQuestion={createQuestion} /> : null}\r\n                                {(questionType === \"input\") ? <AddInput /> : null}\r\n                                {(questionType === \"freetext\") ? <AddFreetext createQuestion={createQuestion} /> : null}\r\n                            </div>\r\n                            <button onClick={() => handleSave(newSurvey)} type=\"submit\">Submit survey</button>\r\n                        </Stack>\r\n\r\n                    </Col>\r\n                </Row >\r\n            </Container >\r\n        </>\r\n    )\r\n};\r\nexport default CreateSurvey;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}