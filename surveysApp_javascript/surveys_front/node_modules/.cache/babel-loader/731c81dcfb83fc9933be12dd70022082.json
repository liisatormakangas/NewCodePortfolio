{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\liisa\\\\Documents\\\\Koodit\\\\portfolio\\\\CodePortfolio\\\\surveysApp_javascript\\\\surveys_front\\\\src\\\\contexts\\\\SurveyContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useState, useContext, useEffect } from \"react\";\nimport { DataContext } from \"./DataContext.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SurveyContext = /*#__PURE__*/createContext(undefined);\n\nconst SurveyContextProvider = props => {\n  _s();\n\n  const dataContext = useContext(DataContext);\n  const [selectedSurvey, setSelectedSurvey] = useState({});\n  const [allSurveys, setAllSurveys] = useState([]);\n\n  const modifiedSurvey = (newSurvey, id) => {\n    dataContext.modifySurvey(newSurvey, id);\n  };\n\n  useEffect(() => {\n    const getAllSurveys = async () => {\n      const surveys = await dataContext.getAllSurveys();\n      setAllSurveys(surveys);\n    };\n\n    getAllSurveys();\n  }, [modifiedSurvey]);\n\n  const addSurvey = newSurvey => {\n    setAllSurveys([...allSurveys, newSurvey]);\n    dataContext.saveNewSurvey(newSurvey);\n  };\n\n  const deleteSurvey = id => {\n    const surveysExceptDeleted = allSurveys.filter(survey => survey.id !== id);\n    setAllSurveys(surveysExceptDeleted);\n    dataContext.removeSurvey(id);\n  }; //const modifiedSurvey = (newSurvey, id) => {\n  //allSurveys.map(survey => survey.id === id ? newSurvey : survey);\n  //(setAllSurveys(modifiedSurvey);\n  //} \n\n\n  const addAnswers = (newAnswers, id) => {\n    const allAnswers = selectedSurvey.answers.concat(newAnswers);\n    dataContext.updateSurveyAnswers(allAnswers, id);\n  };\n\n  const getNewId = () => {\n    while (true) {\n      const newId = Math.floor(Math.random() * 1000);\n      const foundSurvey = allSurveys.find(survey => survey.questions.id === newId);\n      if (foundSurvey) continue;else return newId;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(SurveyContext.Provider, {\n    value: {\n      allSurveys,\n      deleteSurvey,\n      addSurvey,\n      getNewId,\n      selectedSurvey,\n      setSelectedSurvey,\n      addAnswers,\n      modifiedSurvey\n    },\n    children: props ? props.children : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SurveyContextProvider, \"Eq1+WWQa4/7AeQXqPKyaPX/5vvg=\");\n\n_c = SurveyContextProvider;\nexport const useSurveyContext = () => {\n  _s2();\n\n  const survey = useContext(SurveyContext);\n  if (!survey) throw new Error(\"must be used within it's provider\");\n  return survey;\n};\n\n_s2(useSurveyContext, \"Ff2MSjs2WywPKnjvV4yPUt7cqAQ=\");\n\nexport default SurveyContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"SurveyContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","DataContext","SurveyContext","undefined","SurveyContextProvider","props","dataContext","selectedSurvey","setSelectedSurvey","allSurveys","setAllSurveys","modifiedSurvey","newSurvey","id","modifySurvey","getAllSurveys","surveys","addSurvey","saveNewSurvey","deleteSurvey","surveysExceptDeleted","filter","survey","removeSurvey","addAnswers","newAnswers","allAnswers","answers","concat","updateSurveyAnswers","getNewId","newId","Math","floor","random","foundSurvey","find","questions","children","useSurveyContext","Error"],"sources":["C:/Users/liisa/Documents/Koodit/portfolio/CodePortfolio/surveysApp_javascript/surveys_front/src/contexts/SurveyContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from \"react\";\r\nimport { DataContext } from \"./DataContext.js\";\r\n \r\nconst SurveyContext = createContext(undefined);\r\n \r\nconst SurveyContextProvider = (props) => {\r\n \r\n    const dataContext = useContext(DataContext);\r\n    const [ selectedSurvey, setSelectedSurvey ] = useState({});\r\n    const [ allSurveys, setAllSurveys ] = useState([]);\r\n    \r\n    const modifiedSurvey = (newSurvey, id) => {\r\n        dataContext.modifySurvey(newSurvey, id)\r\n    };\r\n\r\n    \r\n    useEffect(() => {\r\n        const getAllSurveys = async () => {\r\n            const surveys = await dataContext.getAllSurveys();\r\n           \r\n            setAllSurveys(surveys);\r\n        };\r\n        getAllSurveys();\r\n    }, [modifiedSurvey]);\r\n\r\n    const addSurvey = (newSurvey) => {\r\n        setAllSurveys([...allSurveys, newSurvey]);\r\n        dataContext.saveNewSurvey(newSurvey);\r\n    };\r\n    const deleteSurvey = (id) => {\r\n        const surveysExceptDeleted = allSurveys.filter(survey => survey.id !== id);\r\n        setAllSurveys(surveysExceptDeleted);\r\n        dataContext.removeSurvey(id);\r\n    };\r\n    \r\n    //const modifiedSurvey = (newSurvey, id) => {\r\n        //allSurveys.map(survey => survey.id === id ? newSurvey : survey);\r\n        //(setAllSurveys(modifiedSurvey);\r\n    //} \r\n    const addAnswers = (newAnswers, id) => {\r\n        const allAnswers = selectedSurvey.answers.concat(newAnswers);\r\n        dataContext.updateSurveyAnswers(allAnswers, id);\r\n    };\r\n    const getNewId = () => {\r\n        while (true) {\r\n            const newId = Math.floor(Math.random() * 1000);\r\n            const foundSurvey = allSurveys.find(survey => survey.questions.id === newId);\r\n            if (foundSurvey) continue;\r\n            else return newId;\r\n        }\r\n    };\r\n    return (\r\n        <SurveyContext.Provider value={{allSurveys, deleteSurvey, addSurvey, getNewId, selectedSurvey, setSelectedSurvey, addAnswers, modifiedSurvey}}>\r\n            {props ? props.children : (null)}\r\n        </SurveyContext.Provider>\r\n    );\r\n};\r\nexport const useSurveyContext = () => {\r\n    const survey = useContext(SurveyContext);\r\n    if (!survey) throw new Error(\"must be used within it's provider\");\r\n    return survey;\r\n};\r\n \r\nexport default SurveyContextProvider;\r\n\r\n"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,UAAzC,EAAqDC,SAArD,QAAsE,OAAtE;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,MAAMC,aAAa,gBAAGL,aAAa,CAACM,SAAD,CAAnC;;AAEA,MAAMC,qBAAqB,GAAIC,KAAD,IAAW;EAAA;;EAErC,MAAMC,WAAW,GAAGP,UAAU,CAACE,WAAD,CAA9B;EACA,MAAM,CAAEM,cAAF,EAAkBC,iBAAlB,IAAwCV,QAAQ,CAAC,EAAD,CAAtD;EACA,MAAM,CAAEW,UAAF,EAAcC,aAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;;EAEA,MAAMa,cAAc,GAAG,CAACC,SAAD,EAAYC,EAAZ,KAAmB;IACtCP,WAAW,CAACQ,YAAZ,CAAyBF,SAAzB,EAAoCC,EAApC;EACH,CAFD;;EAKAb,SAAS,CAAC,MAAM;IACZ,MAAMe,aAAa,GAAG,YAAY;MAC9B,MAAMC,OAAO,GAAG,MAAMV,WAAW,CAACS,aAAZ,EAAtB;MAEAL,aAAa,CAACM,OAAD,CAAb;IACH,CAJD;;IAKAD,aAAa;EAChB,CAPQ,EAON,CAACJ,cAAD,CAPM,CAAT;;EASA,MAAMM,SAAS,GAAIL,SAAD,IAAe;IAC7BF,aAAa,CAAC,CAAC,GAAGD,UAAJ,EAAgBG,SAAhB,CAAD,CAAb;IACAN,WAAW,CAACY,aAAZ,CAA0BN,SAA1B;EACH,CAHD;;EAIA,MAAMO,YAAY,GAAIN,EAAD,IAAQ;IACzB,MAAMO,oBAAoB,GAAGX,UAAU,CAACY,MAAX,CAAkBC,MAAM,IAAIA,MAAM,CAACT,EAAP,KAAcA,EAA1C,CAA7B;IACAH,aAAa,CAACU,oBAAD,CAAb;IACAd,WAAW,CAACiB,YAAZ,CAAyBV,EAAzB;EACH,CAJD,CAxBqC,CA8BrC;EACI;EACA;EACJ;;;EACA,MAAMW,UAAU,GAAG,CAACC,UAAD,EAAaZ,EAAb,KAAoB;IACnC,MAAMa,UAAU,GAAGnB,cAAc,CAACoB,OAAf,CAAuBC,MAAvB,CAA8BH,UAA9B,CAAnB;IACAnB,WAAW,CAACuB,mBAAZ,CAAgCH,UAAhC,EAA4Cb,EAA5C;EACH,CAHD;;EAIA,MAAMiB,QAAQ,GAAG,MAAM;IACnB,OAAO,IAAP,EAAa;MACT,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CAAd;MACA,MAAMC,WAAW,GAAG1B,UAAU,CAAC2B,IAAX,CAAgBd,MAAM,IAAIA,MAAM,CAACe,SAAP,CAAiBxB,EAAjB,KAAwBkB,KAAlD,CAApB;MACA,IAAII,WAAJ,EAAiB,SAAjB,KACK,OAAOJ,KAAP;IACR;EACJ,CAPD;;EAQA,oBACI,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAE;MAACtB,UAAD;MAAaU,YAAb;MAA2BF,SAA3B;MAAsCa,QAAtC;MAAgDvB,cAAhD;MAAgEC,iBAAhE;MAAmFgB,UAAnF;MAA+Fb;IAA/F,CAA/B;IAAA,UACKN,KAAK,GAAGA,KAAK,CAACiC,QAAT,GAAqB;EAD/B;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAnDD;;GAAMlC,qB;;KAAAA,qB;AAoDN,OAAO,MAAMmC,gBAAgB,GAAG,MAAM;EAAA;;EAClC,MAAMjB,MAAM,GAAGvB,UAAU,CAACG,aAAD,CAAzB;EACA,IAAI,CAACoB,MAAL,EAAa,MAAM,IAAIkB,KAAJ,CAAU,mCAAV,CAAN;EACb,OAAOlB,MAAP;AACH,CAJM;;IAAMiB,gB;;AAMb,eAAenC,qBAAf"},"metadata":{},"sourceType":"module"}