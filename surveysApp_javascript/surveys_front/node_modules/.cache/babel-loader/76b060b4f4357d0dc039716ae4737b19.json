{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\liisa\\\\Documents\\\\JavaScript Traning\\\\ReferenceProject\\\\visualizing_surveys\\\\src\\\\views\\\\AnswerSurvey.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Sidebar from '../components/Sidebar.js';\nimport { useNavigate } from 'react-router-dom';\nimport { useSurveyContext } from '../contexts/SurveyContext.js';\nimport \"./results.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AnswerSurvey = () => {\n  _s();\n\n  const {\n    addAnswers,\n    selectedSurvey,\n    setSelectedSurvey\n  } = useSurveyContext();\n  const [answerState, setAnswerState] = useState({});\n  const [multipleChoices, setMultipleChoices] = useState([]);\n  const navigate = useNavigate();\n\n  const handleInput = (question, event) => {\n    setAnswerState({ ...answerState,\n      [question]: event.target.value\n    });\n  };\n\n  const handleDropdown = (question, option) => {\n    setAnswerState({ ...answerState,\n      [question]: option\n    });\n  };\n\n  const handleClick = (question, option) => {\n    const optionArray = multipleChoices.concat(option);\n    setAnswerState({ ...answerState,\n      [question]: option\n    });\n  };\n\n  const handleSave = () => {\n    const surveyId = selectedSurvey.id;\n    addAnswers(answerState, surveyId);\n    setSelectedSurvey({});\n    navigate(\"/thanks\", {\n      replace: true,\n      state: `Thank you for answering the ${selectedSurvey.surveyTitle} survey! Your answers have now been saved succesfully. `\n    });\n  };\n\n  let number = 0;\n  const listSurveyQuestionsDOM = selectedSurvey.questions ? selectedSurvey.questions.map(question => {\n    number += 1;\n    return /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: [number, \". \", question.questionTitle]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), question.questionType === \"freetext\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          onChange: event => handleInput(question.questionId, event),\n          placeholder: \"Write your answer here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 59\n      }, this) : null, question.questionType === \"dropdown\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Dropdown, {\n          className: \"mb-2\",\n          as: ButtonGroup,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"light\",\n            children: answerState.hasOwnProperty(question.questionId) ? answerState[question.questionId] : \"Answer options\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n            variant: \"secondary\",\n            id: \"dropdown-split-basic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n            children: question.dropdownQuestionOptions.map(option => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              onClick: () => handleDropdown(question.questionId, option),\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 59\n      }, this) : null, question.questionType === \"multiple-choice\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: question.dropdownQuestionOptions.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            id: option,\n            label: option,\n            onClick: () => handleClick(question.questionId, option)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 33\n          }, this)\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this) : null]\n    }, question.questionid, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }) : null;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"mt-5 mb-5\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 3,\n        className: \"mx-4\",\n        children: /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), selectedSurvey.surveyTitle ? /*#__PURE__*/_jsxDEV(Col, {\n        xs: 7,\n        className: \"text-left resultsSheet\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: selectedSurvey.surveyTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Description of the survey:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 32\n            }, this), \" \", selectedSurvey.surveyDescription]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [listSurveyQuestionsDOM, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSave,\n            type: \"submit\",\n            children: \"Submit Answers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"First, choose a survey from the left sidebar to give your answer.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AnswerSurvey, \"so1IheBz7IIrAJwqqCjICvB6rnA=\", false, function () {\n  return [useSurveyContext, useNavigate];\n});\n\n_c = AnswerSurvey;\nexport default AnswerSurvey;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnswerSurvey\");","map":{"version":3,"names":["React","useState","Sidebar","useNavigate","useSurveyContext","Container","Col","Row","Form","Button","Dropdown","ButtonGroup","AnswerSurvey","addAnswers","selectedSurvey","setSelectedSurvey","answerState","setAnswerState","multipleChoices","setMultipleChoices","navigate","handleInput","question","event","target","value","handleDropdown","option","handleClick","optionArray","concat","handleSave","surveyId","id","replace","state","surveyTitle","number","listSurveyQuestionsDOM","questions","map","questionTitle","questionType","questionId","hasOwnProperty","dropdownQuestionOptions","questionid","surveyDescription"],"sources":["C:/Users/liisa/Documents/JavaScript Traning/ReferenceProject/visualizing_surveys/src/views/AnswerSurvey.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Sidebar from '../components/Sidebar.js'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport { useSurveyContext } from '../contexts/SurveyContext.js';\r\n\r\nimport \"./results.css\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\n\r\n\r\nconst AnswerSurvey = () => {\r\n\r\n    const { addAnswers, selectedSurvey, setSelectedSurvey } = useSurveyContext();\r\n\r\n    const [answerState, setAnswerState] = useState({})\r\n    const [multipleChoices, setMultipleChoices] = useState([])\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleInput = (question, event) => {\r\n        setAnswerState({ ...answerState, [question]: event.target.value });\r\n    };\r\n\r\n    const handleDropdown = (question, option) => {\r\n        setAnswerState({ ...answerState, [question]: option });\r\n    };\r\n\r\n    const handleClick = (question, option) => {\r\n        const optionArray = multipleChoices.concat(option);\r\n        setAnswerState({ ...answerState, [question]: option})\r\n    }\r\n\r\n    const handleSave = () => {\r\n        const surveyId = selectedSurvey.id;\r\n\r\n        addAnswers(answerState, surveyId);\r\n        setSelectedSurvey({});\r\n        navigate(\"/thanks\", { replace: true, state: `Thank you for answering the ${selectedSurvey.surveyTitle} survey! Your answers have now been saved succesfully. ` });\r\n    };\r\n\r\n    let number = 0;\r\n    const listSurveyQuestionsDOM = selectedSurvey.questions ? selectedSurvey.questions.map((question) => {\r\n        number += 1;\r\n        return (\r\n            <Form.Group key={question.questionid} className=\"mb-3\" >\r\n                <Form.Label>{number}. {question.questionTitle}</Form.Label>\r\n\r\n                {(question.questionType === \"freetext\") ? <div>\r\n                    <Form.Control onChange={(event) => handleInput(question.questionId, event)} placeholder=\"Write your answer here\" />\r\n                    <Form.Text className=\"text-muted\"></Form.Text></div> : (null)}\r\n\r\n                {(question.questionType === \"dropdown\") ? <div>\r\n                    <Dropdown className=\"mb-2\" as={ButtonGroup}>\r\n                        <Button variant=\"light\">{answerState.hasOwnProperty(question.questionId) ? answerState[question.questionId] : \"Answer options\"}</Button>\r\n                        <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-split-basic\" />\r\n                        <Dropdown.Menu>\r\n\r\n                            {question.dropdownQuestionOptions.map((option) => (\r\n                                <Dropdown.Item onClick={() => handleDropdown(question.questionId, option)}>{option}</Dropdown.Item>\r\n                            ))}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div> : (null)}\r\n                {(question.questionType === \"multiple-choice\") ?\r\n                    <div>\r\n                        {question.dropdownQuestionOptions.map((option) => (\r\n                            <div key={option} className=\"mb-3\">\r\n                                <Form.Check\r\n                                    type=\"radio\"\r\n                                    id={option}\r\n                                    label={option}\r\n                                    onClick={() => handleClick(question.questionId, option)}\r\n                                />\r\n                            </div>\r\n                        ))}\r\n\r\n                    </div> : (null)}\r\n            </Form.Group>\r\n        )\r\n    }) : (null);\r\n\r\n    return (\r\n\r\n        <Container fluid className=\"mt-5 mb-5\">\r\n            <Row>\r\n                <Col xs={3} className=\"mx-4\">\r\n                    <Sidebar />\r\n                </Col>\r\n                {selectedSurvey.surveyTitle ?\r\n                    <Col xs={7} className=\"text-left resultsSheet\">\r\n                        <div className=\"mb-5\">\r\n                            <h4><i>{selectedSurvey.surveyTitle}</i></h4>\r\n                            <br />\r\n                            <p><b>Description of the survey:</b> {selectedSurvey.surveyDescription}</p>\r\n                        </div>\r\n                        <Form>\r\n                            {listSurveyQuestionsDOM}\r\n                            <button onClick={handleSave} type=\"submit\">Submit Answers</button>\r\n                        </Form>\r\n                    </Col>\r\n                    : <Col ><h5>First, choose a survey from the left sidebar to give your answer.</h5></Col>}\r\n            </Row>\r\n        </Container>\r\n\r\n    )\r\n};\r\nexport default AnswerSurvey;"],"mappings":"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"},"metadata":{},"sourceType":"module"}