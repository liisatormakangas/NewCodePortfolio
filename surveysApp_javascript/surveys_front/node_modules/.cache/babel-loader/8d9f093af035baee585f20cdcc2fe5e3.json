{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\liisa\\\\Documents\\\\JavaScript Traning\\\\ReferenceProject\\\\visualizing_surveys\\\\src\\\\contexts\\\\TextContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useState, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextContext = /*#__PURE__*/createContext(undefined);\n\nconst TextContextProvider = children => {\n  _s();\n\n  const [questionText, setQuestionText] = useState({});\n  return /*#__PURE__*/_jsxDEV(TextContext.Provider, {\n    value: {\n      questionText,\n      setQuestionText\n    },\n    children: childre\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TextContextProvider, \"aInZXgpsmTmy0v9hjWp5M0ZCnlg=\");\n\n_c = TextContextProvider;\nexport const useTextContext = () => {\n  _s2();\n\n  const text = useContext(TextContext);\n  if (!text) throw new Error(\"must be used within it's provider\");\n  return text;\n};\n\n_s2(useTextContext, \"TmJh5N/6RGnGQj05H8cC7h/6ZH0=\");\n\nexport default TextContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","TextContext","undefined","TextContextProvider","children","questionText","setQuestionText","childre","useTextContext","text","Error"],"sources":["C:/Users/liisa/Documents/JavaScript Traning/ReferenceProject/visualizing_surveys/src/contexts/TextContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from \"react\";\r\n\r\n\r\nconst TextContext = createContext(undefined);\r\n\r\nconst TextContextProvider = (children) => {\r\n\r\n    const [questionText, setQuestionText] = useState({});\r\n\r\n    return (\r\n        <TextContext.Provider value={{ questionText, setQuestionText }}>\r\n            {childre}\r\n        </TextContext.Provider>\r\n    )\r\n};\r\n\r\nexport const useTextContext = () => {\r\n    const text = useContext(TextContext);\r\n    if (!text) throw new Error(\"must be used within it's provider\")\r\n    return text\r\n};\r\n\r\n\r\nexport default TextContextProvider;"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,UAAzC,QAA2D,OAA3D;;AAGA,MAAMC,WAAW,gBAAGH,aAAa,CAACI,SAAD,CAAjC;;AAEA,MAAMC,mBAAmB,GAAIC,QAAD,IAAc;EAAA;;EAEtC,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD;EAEA,oBACI,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAE;MAAEM,YAAF;MAAgBC;IAAhB,CAA7B;IAAA,UACKC;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CATD;;GAAMJ,mB;;KAAAA,mB;AAWN,OAAO,MAAMK,cAAc,GAAG,MAAM;EAAA;;EAChC,MAAMC,IAAI,GAAGT,UAAU,CAACC,WAAD,CAAvB;EACA,IAAI,CAACQ,IAAL,EAAW,MAAM,IAAIC,KAAJ,CAAU,mCAAV,CAAN;EACX,OAAOD,IAAP;AACH,CAJM;;IAAMD,c;;AAOb,eAAeL,mBAAf"},"metadata":{},"sourceType":"module"}