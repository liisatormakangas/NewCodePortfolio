{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\liisa\\\\Documents\\\\JavaScript Traning\\\\ReferenceProject\\\\visualizing_surveys\\\\src\\\\views\\\\AnswerSurvey.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Sidebar from '../components/Sidebar.js';\nimport { useNavigate } from 'react-router-dom';\nimport { useSurveyContext } from '../contexts/SurveyContext.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AnswerSurvey = () => {\n  _s();\n\n  const {\n    selectedSurvey\n  } = useSurveyContext();\n  const {\n    addAnswers\n  } = useSurveyContext();\n  const [freetextInput, setFreetextInput] = useState(\"\");\n  const [newAnswers, setNewAnswers] = useState([]);\n  const navigate = useNavigate();\n\n  const handleFreetextInput = event => {\n    setFreetextInput(event.target.value);\n    const arra = [];\n    const talteen = arra.concat(freetextInput);\n  };\n\n  console.log(talteen);\n\n  const handleDropdown = (question, option) => {\n    const answer = {\n      id: question.questionId,\n      answ: option\n    };\n    setNewAnswers(newAnswers.concat(answer));\n  }; //console.log(newAnswers);\n\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const surveyId = selectedSurvey.id;\n    addAnswers(newAnswers, surveyId);\n    navigate(\"/thanks\", {\n      replace: true,\n      state: `Thank you for answering the ${selectedSurvey.surveyTitle} survey! Your answers have now been saved succesfully. `\n    });\n  };\n\n  let number = 0;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"mt-5 mb-5\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mr-100\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"auto\",\n          className: \"mx-5\",\n          children: /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), selectedSurvey.surveyTitle ? /*#__PURE__*/_jsxDEV(Col, {\n          xs: 7,\n          className: \"text-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                children: selectedSurvey.surveyTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Description of the survey:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 36\n              }, this), \" \", selectedSurvey.surveyDescription]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [selectedSurvey.questions.map(question => /*#__PURE__*/_jsxDEV(Form, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                controlId: \"question\",\n                children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                  children: [number, \".\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: question.questionTitle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 45\n                }, this), question.questionType === \"freetext\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                    onChange: () => handleFreetextInput(question),\n                    placeholder: \"Write your answer here\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                    className: \"text-muted\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 87\n                }, this) : null, question.questionType === \"dropdown\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(Dropdown, {\n                    className: \"mb-2\",\n                    as: ButtonGroup,\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"light\",\n                      children: \"Answer options\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 83,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n                      variant: \"secondary\",\n                      id: \"dropdown-split-basic\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 84,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n                      children: question.dropdownQuestionOptions.map(option => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                        onClick: () => handleDropdown(question, option),\n                        children: option\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 87,\n                        columnNumber: 61\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 87\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 37\n            }, this)), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleSubmit,\n              variant: \"secondary\",\n              type: \"submit\",\n              children: \"Submit answers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Col, {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"First, choose a survey from the left sidebar to give your answer.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(AnswerSurvey, \"2ACgVHIMTJFplNMAdT8sPCvXkNU=\", false, function () {\n  return [useSurveyContext, useSurveyContext, useNavigate];\n});\n\n_c = AnswerSurvey;\nexport default AnswerSurvey;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnswerSurvey\");","map":{"version":3,"names":["React","useState","Sidebar","useNavigate","useSurveyContext","Container","Col","Row","Form","Button","Dropdown","ButtonGroup","AnswerSurvey","selectedSurvey","addAnswers","freetextInput","setFreetextInput","newAnswers","setNewAnswers","navigate","handleFreetextInput","event","target","value","arra","talteen","concat","console","log","handleDropdown","question","option","answer","id","questionId","answ","handleSubmit","preventDefault","surveyId","replace","state","surveyTitle","number","surveyDescription","questions","map","questionTitle","questionType","dropdownQuestionOptions"],"sources":["C:/Users/liisa/Documents/JavaScript Traning/ReferenceProject/visualizing_surveys/src/views/AnswerSurvey.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Sidebar from '../components/Sidebar.js'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport { useSurveyContext } from '../contexts/SurveyContext.js';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\n\r\n\r\nconst AnswerSurvey = () => {\r\n\r\n    const { selectedSurvey } = useSurveyContext();\r\n    const { addAnswers } = useSurveyContext();\r\n\r\n    const [freetextInput, setFreetextInput] = useState(\"\");\r\n    const [newAnswers, setNewAnswers] = useState([]);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleFreetextInput = (event) => {\r\n        setFreetextInput(event.target.value);\r\n        const arra = [];\r\n        const talteen = arra.concat(freetextInput);\r\n        \r\n    };\r\n\r\n    console.log(talteen);\r\n    \r\n\r\n    const handleDropdown = (question, option) => {\r\n        const answer = {\r\n            id: question.questionId,\r\n            answ: option\r\n        };\r\n        setNewAnswers(newAnswers.concat(answer));\r\n    };\r\n    //console.log(newAnswers);\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const surveyId = selectedSurvey.id;\r\n\r\n        addAnswers(newAnswers, surveyId);\r\n        navigate(\"/thanks\", { replace: true, state: `Thank you for answering the ${selectedSurvey.surveyTitle} survey! Your answers have now been saved succesfully. ` });\r\n    };\r\n\r\n    let number = 0;\r\n    return (\r\n        <>\r\n            <Container fluid className=\"mt-5 mb-5\">\r\n                <Row className=\"mr-100\">\r\n                    <Col md=\"auto\" className=\"mx-5\">\r\n                        <Sidebar />\r\n                    </Col>\r\n                    {selectedSurvey.surveyTitle ?\r\n                        <Col xs={7} className=\"text-left\">\r\n                            <div className=\"mb-5\">\r\n                                <h4><i>{selectedSurvey.surveyTitle}</i></h4>\r\n                                <br />\r\n                                <p><b>Description of the survey:</b> {selectedSurvey.surveyDescription}</p>\r\n                            </div>\r\n                            <div>\r\n                                {selectedSurvey.questions.map((question) => (\r\n                                    <Form>\r\n                                        <Form.Group className=\"mb-3\" controlId=\"question\">\r\n                                            <h6>{number}.</h6>\r\n                                            <Form.Label>{question.questionTitle}</Form.Label>\r\n\r\n                                            {(question.questionType === \"freetext\") ? <div>\r\n                                                <Form.Control onChange={() => handleFreetextInput(question)} placeholder=\"Write your answer here\" />\r\n                                                <Form.Text className=\"text-muted\"></Form.Text></div> : (null)}\r\n\r\n                                            {(question.questionType === \"dropdown\") ? <div>\r\n                                                <Dropdown className=\"mb-2\" as={ButtonGroup}>\r\n                                                    <Button variant=\"light\">Answer options</Button>\r\n                                                    <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-split-basic\" />\r\n                                                    <Dropdown.Menu>\r\n                                                        {question.dropdownQuestionOptions.map((option) => (\r\n                                                            <Dropdown.Item onClick={() => handleDropdown(question, option)}>{option}</Dropdown.Item>\r\n                                                        ))}\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown></div> : (null)}\r\n                                        </Form.Group>\r\n                                    </Form>\r\n                                ))\r\n                                }\r\n                                <Button onClick={handleSubmit} variant=\"secondary\" type=\"submit\">Submit answers</Button>\r\n\r\n                            </div>\r\n                        </Col>\r\n                        : <Col className=\"text-center\"><h5>First, choose a survey from the left sidebar to give your answer.</h5></Col>}\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    )\r\n};\r\nexport default AnswerSurvey;"],"mappings":"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"},"metadata":{},"sourceType":"module"}