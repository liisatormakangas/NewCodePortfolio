{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\liisa\\\\Documents\\\\Koodit\\\\portfolio\\\\CodePortfolio\\\\surveysApp_javascript\\\\surveys_front\\\\src\\\\views\\\\AnswerSurvey.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport Sidebar from '../components/Sidebar.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport Stack from 'react-bootstrap/Stack';\nimport Button from 'react-bootstrap/Button';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport \"../styling/results.css\";\nimport { useSurveyContext } from '../contexts/SurveyContext.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AnswerSurvey = () => {\n  _s();\n\n  const {\n    addAnswers,\n    selectedSurvey,\n    setSelectedSurvey\n  } = useSurveyContext();\n  const [answerState, setAnswerState] = useState({});\n  const [checkedState, setCheckedState] = useState(new Array(10).fill(false));\n  const navigate = useNavigate();\n\n  const handleInput = (question, event) => {\n    setAnswerState({ ...answerState,\n      [question]: event.target.value\n    });\n  };\n\n  const handleDropdown = (question, option) => {\n    setAnswerState({ ...answerState,\n      [question]: option\n    });\n  };\n\n  const handleMultipleChoices = (question, opt, position) => {\n    const updatedCheckedState = checkedState.map((item, index) => index === position ? !item : item);\n    setCheckedState(updatedCheckedState);\n    console.log(chec);\n    const finalOptions = question.dropdownQuestionOptions.filter((opt, index) => checkedState[index] ? opt : null);\n    console.log(finalOptions);\n    setAnswerState({ ...answerState,\n      [question]: finalOptions\n    });\n    console.log(answerState); //const { value, checked } = event.target;\n    //const { options } = checkOptions;\n    //if (checked) {\n    //setCheckOptions({\n    //options: [...options, { id: question.questionId, opt: value }]\n    //options: [...options, value]\n    //});\n    //}\n    //Tämä ei toimi vielä oikein, error: opt.filter is not a function\n    //else {\n    //setCheckOptions({\n    //options: options.map(opt => { const arr = opt.filter(item => item[1].opt !== value); return arr })\n    //options: [options.filter(opt => opt !== value)]\n    //});\n    //};\n  };\n\n  const handleSave = event => {\n    event.preventDefault();\n    const surveyId = selectedSurvey.id;\n    addAnswers(answerState, surveyId);\n    setSelectedSurvey({});\n    navigate(\"/thanks\", {\n      replace: true,\n      state: `Thank you for answering the ${selectedSurvey.surveyTitle} survey! Your answers have now been saved succesfully. `\n    });\n  };\n\n  let number = 0;\n  const listSurveyQuestionsDOM = selectedSurvey.questions ? selectedSurvey.questions.map(question => {\n    number += 1;\n    return /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      style: {\n        borderStyle: \"solid\",\n        borderColor: \"#227174\",\n        borderWidth: \"4px\",\n        padding: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: [number, \". \", question.questionTitle]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), question.questionType === \"freetext\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          onChange: event => handleInput(question.questionId, event),\n          placeholder: \"Write your answer here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this) : null, question.questionType === \"dropdown\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Dropdown, {\n          className: \"mb-2\",\n          as: ButtonGroup,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"light\",\n            type: \"button\",\n            children: answerState.hasOwnProperty(question.questionId) ? answerState[question.questionId] : \"Answer options\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n            variant: \"secondary\",\n            id: \"dropdown-split-basic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n            children: question.dropdownQuestionOptions.map(option => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              onClick: () => handleDropdown(question.questionId, option),\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this) : null, question.questionType === \"multiple-choice\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: question.dropdownQuestionOptions.map((opt, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mx-4\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            name: \"option\",\n            value: opt,\n            id: `custom-checkbox-${index}`,\n            label: opt,\n            checked: checkedState[index],\n            onChange: () => handleMultipleChoices(question, opt, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 33\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this) : null]\n    }, question.questionid, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  }) : null;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"my-5\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 3,\n        className: \"mx-4\",\n        children: /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), selectedSurvey.surveyTitle ? /*#__PURE__*/_jsxDEV(Col, {\n        xs: 7,\n        className: \"resultsSheet\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-center mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: selectedSurvey.surveyTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 62\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-center mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Description of the survey:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 61\n            }, this), \" \", selectedSurvey.surveyDescription]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          style: {\n            background: \"#227174\",\n            height: \"8px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          children: [listSurveyQuestionsDOM, /*#__PURE__*/_jsxDEV(Button, {\n            className: \"button\",\n            onClick: handleSave,\n            type: \"submit\",\n            children: \"Submit Answers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"First, choose a survey from the left sidebar to give your answer.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AnswerSurvey, \"LOOC6YC0YgqFVPzXv/d+3OgRFNM=\", false, function () {\n  return [useSurveyContext, useNavigate];\n});\n\n_c = AnswerSurvey;\nexport default AnswerSurvey;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnswerSurvey\");","map":{"version":3,"names":["React","useState","useNavigate","Sidebar","Container","Col","Row","Form","Stack","Button","Dropdown","ButtonGroup","useSurveyContext","AnswerSurvey","addAnswers","selectedSurvey","setSelectedSurvey","answerState","setAnswerState","checkedState","setCheckedState","Array","fill","navigate","handleInput","question","event","target","value","handleDropdown","option","handleMultipleChoices","opt","position","updatedCheckedState","map","item","index","console","log","chec","finalOptions","dropdownQuestionOptions","filter","handleSave","preventDefault","surveyId","id","replace","state","surveyTitle","number","listSurveyQuestionsDOM","questions","borderStyle","borderColor","borderWidth","padding","questionTitle","questionType","questionId","hasOwnProperty","questionid","surveyDescription","background","height"],"sources":["C:/Users/liisa/Documents/Koodit/portfolio/CodePortfolio/surveysApp_javascript/surveys_front/src/views/AnswerSurvey.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport Sidebar from '../components/Sidebar.js';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Stack from 'react-bootstrap/Stack'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport \"../styling/results.css\";\r\n\r\nimport { useSurveyContext } from '../contexts/SurveyContext.js';\r\n\r\nconst AnswerSurvey = () => {\r\n\r\n    const { addAnswers, selectedSurvey, setSelectedSurvey } = useSurveyContext();\r\n    const [answerState, setAnswerState] = useState({});\r\n    const [checkedState, setCheckedState] = useState(new Array(10).fill(false))\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleInput = (question, event) => {\r\n        setAnswerState({ ...answerState, [question]: event.target.value });\r\n    };\r\n    const handleDropdown = (question, option) => {\r\n        setAnswerState({ ...answerState, [question]: option });\r\n    };\r\n    const handleMultipleChoices = (question, opt, position) => {\r\n        const updatedCheckedState = checkedState.map((item, index) => \r\n        index === position ? !item : item);\r\n        setCheckedState(updatedCheckedState)\r\n        console.log(chec);\r\n        \r\n\r\n        const finalOptions =  question.dropdownQuestionOptions.filter((opt, index) =>\r\n            checkedState[index] ? opt : null);\r\n        \r\n        console.log(finalOptions);\r\n        \r\n\r\n        setAnswerState({ ...answerState, [question]: finalOptions});\r\n        \r\n        console.log(answerState);\r\n        \r\n        //const { value, checked } = event.target;\r\n        //const { options } = checkOptions;\r\n\r\n        //if (checked) {\r\n            //setCheckOptions({\r\n                //options: [...options, { id: question.questionId, opt: value }]\r\n                //options: [...options, value]\r\n            //});\r\n        //}\r\n        //Tämä ei toimi vielä oikein, error: opt.filter is not a function\r\n        //else {\r\n\r\n            //setCheckOptions({\r\n\r\n                //options: options.map(opt => { const arr = opt.filter(item => item[1].opt !== value); return arr })\r\n                //options: [options.filter(opt => opt !== value)]\r\n            //});\r\n        //};\r\n    };\r\n    const handleSave = (event) => {\r\n        event.preventDefault();\r\n        const surveyId = selectedSurvey.id;\r\n\r\n        addAnswers(answerState, surveyId);\r\n        setSelectedSurvey({});\r\n        navigate(\"/thanks\", { replace: true, state: `Thank you for answering the ${selectedSurvey.surveyTitle} survey! Your answers have now been saved succesfully. ` });\r\n    };\r\n    let number = 0;\r\n    const listSurveyQuestionsDOM = selectedSurvey.questions ? selectedSurvey.questions.map((question) => {\r\n        number += 1;\r\n        return (\r\n            <Form.Group key={question.questionid} className=\"mb-3\" style={{ borderStyle: \"solid\", borderColor: \"#227174\", borderWidth: \"4px\", padding: \"10px\" }} >\r\n                <Form.Label>{number}. {question.questionTitle}</Form.Label>\r\n                {(question.questionType === \"freetext\") ?\r\n                    <div>\r\n                        <Form.Control as=\"textarea\" onChange={(event) => handleInput(question.questionId, event)} placeholder=\"Write your answer here\" />\r\n                    </div>\r\n                    : (null)}\r\n                {(question.questionType === \"dropdown\") ?\r\n                    <div>\r\n                        <Dropdown className=\"mb-2\" as={ButtonGroup}>\r\n                            <Button variant=\"light\" type=\"button\">{answerState.hasOwnProperty(question.questionId) ? answerState[question.questionId] : \"Answer options\"}</Button>\r\n                            <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-split-basic\" />\r\n                            <Dropdown.Menu>\r\n                                {question.dropdownQuestionOptions.map((option) => (\r\n                                    <Dropdown.Item onClick={() => handleDropdown(question.questionId, option)}>{option}</Dropdown.Item>\r\n                                ))}\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                    </div> : (null)}\r\n                {(question.questionType === \"multiple-choice\") ?\r\n                    <div>\r\n                        {question.dropdownQuestionOptions.map((opt, index) => (\r\n                            <div key={index} className=\"mx-4\">\r\n                                <Form.Check\r\n                                    type=\"checkbox\"\r\n                                    name=\"option\"\r\n                                    value={opt}\r\n                                    id={`custom-checkbox-${index}`} \r\n                                    label={opt}\r\n                                    checked={checkedState[index]}\r\n                                    onChange={() => handleMultipleChoices(question, opt, index)}\r\n                                />\r\n                            </div>\r\n                        ))}\r\n                    </div> : (null)}\r\n            </Form.Group>\r\n        )\r\n    }) : (null);\r\n    return (\r\n        <Container fluid className=\"my-5\">\r\n            <Row>\r\n                <Col xs={3} className=\"mx-4\">\r\n                    <Sidebar />\r\n                </Col>\r\n                {selectedSurvey.surveyTitle ?\r\n                    <Col xs={7} className=\"resultsSheet\">\r\n                        <div>\r\n                            <h4 className=\"text-center mb-3\"><i>{selectedSurvey.surveyTitle}</i></h4>\r\n                            <p className=\"text-center mb-4\"><b>Description of the survey:</b> {selectedSurvey.surveyDescription}</p>\r\n                        </div>\r\n\r\n                        <hr style={{ background: \"#227174\", height: \"8px\" }} />\r\n\r\n                        <Stack>\r\n                            {listSurveyQuestionsDOM}\r\n                            <Button className=\"button\" onClick={handleSave} type=\"submit\">Submit Answers</Button>\r\n                        </Stack>\r\n                    </Col>\r\n                    : <Col ><h5>First, choose a survey from the left sidebar to give your answer.</h5></Col>}\r\n            </Row>\r\n        </Container>\r\n    )\r\n};\r\nexport default AnswerSurvey;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}