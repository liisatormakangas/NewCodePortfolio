{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\liisa\\\\Documents\\\\JavaScript Traning\\\\ReferenceProject\\\\visualizing_surveys\\\\src\\\\views\\\\AnswerSurvey.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Sidebar from '../components/Sidebar.js';\nimport { useSurveyContext } from '../contexts/SurveyContext.js';\nimport \"./results.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Dropdown from 'react-bootstrap/dropdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AnswerSurvey = () => {\n  _s();\n\n  const {\n    selectedSurvey\n  } = useSurveyContext();\n  const [input, setInput] = useState(\"\");\n  const [answers, setAnswers] = useState([]);\n\n  const handleInput = event => {\n    setInput(event.target.value);\n  };\n\n  const handleFreetextSubmit = (event, id) => {\n    event.preventDefault();\n    setAnswers(answers.concat({\n      id: id,\n      answer: input\n    }));\n  };\n\n  console.log(answers);\n  const listSurveyQuestions = selectedSurvey.questions ? selectedSurvey.questions.map(question => {\n    if (question.questionType === \"freetext\") {\n      return /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: () => handleFreetextSubmit(question.id),\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: question.questionTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              onChange: handleInput,\n              placeholder: \"Write your answer here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            type: \"submit\",\n            children: \"Save answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)\n      }, question.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 20\n      }, this);\n    } else if (question.questionType === \"dropdown\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: question.questionTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n            variant: \"secondary\",\n            id: \"dropdown-basic\",\n            children: \"Answer options\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n            children: question.dropdownQuestionOptions.map(option => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              href: \"#/action\",\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 20\n      }, this);\n    } else return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"monivalinnat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 23\n    }, this);\n  }) : null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"mt-5 mb-5\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mr-100\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"auto\",\n          className: \"mx-5\",\n          children: /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"text-center resultsSheet\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Here you can answer the \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: selectedSurvey.surveyTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 53\n            }, this), \" survey\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Description of the survey:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 28\n            }, this), \" \", selectedSurvey.surveyDescription]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), listSurveyQuestions]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(AnswerSurvey, \"77SCpYWfisO1PEt3bkJ8Vh3NT+w=\", false, function () {\n  return [useSurveyContext];\n});\n\n_c = AnswerSurvey;\nexport default AnswerSurvey;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnswerSurvey\");","map":{"version":3,"names":["React","useState","Sidebar","useSurveyContext","Container","Col","Row","Form","Button","Dropdown","AnswerSurvey","selectedSurvey","input","setInput","answers","setAnswers","handleInput","event","target","value","handleFreetextSubmit","id","preventDefault","concat","answer","console","log","listSurveyQuestions","questions","map","question","questionType","questionTitle","dropdownQuestionOptions","option","surveyTitle","surveyDescription"],"sources":["C:/Users/liisa/Documents/JavaScript Traning/ReferenceProject/visualizing_surveys/src/views/AnswerSurvey.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Sidebar from '../components/Sidebar.js'\r\n\r\nimport { useSurveyContext } from '../contexts/SurveyContext.js';\r\nimport \"./results.css\"\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Dropdown from 'react-bootstrap/dropdown';\r\n\r\n\r\nconst AnswerSurvey = () => {\r\n\r\n    const { selectedSurvey } = useSurveyContext();\r\n\r\n    const [input, setInput] = useState(\"\");\r\n    const [answers, setAnswers] = useState([])\r\n\r\n    const handleInput = (event) => {\r\n        setInput(event.target.value);\r\n    };\r\n\r\n    const handleFreetextSubmit = (event, id) => {\r\n        event.preventDefault();\r\n        setAnswers(answers.concat({ id: id, answer: input }))\r\n    };\r\n    console.log(answers);\r\n\r\n\r\n    const listSurveyQuestions = selectedSurvey.questions ? selectedSurvey.questions.map((question) => {\r\n        if (question.questionType === \"freetext\") {\r\n            return <Container key={question.id}>\r\n                <Form onSubmit={() => handleFreetextSubmit(question.id)}>\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label><h5>{question.questionTitle}</h5></Form.Label>\r\n                        <Form.Control onChange={handleInput}\r\n                            placeholder=\"Write your answer here\" />\r\n                        <Form.Text className=\"text-muted\"></Form.Text>\r\n                    </Form.Group>\r\n                    <Button variant=\"secondary\" type=\"submit\">Save answer</Button>\r\n                </Form>\r\n            </Container>;\r\n        } else if (question.questionType === \"dropdown\") {\r\n            return <div>\r\n                <h5>{question.questionTitle}</h5>\r\n                <Dropdown>\r\n                    <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\r\n                        Answer options\r\n                    </Dropdown.Toggle>\r\n\r\n                    <Dropdown.Menu>\r\n                        {question.dropdownQuestionOptions.map((option) => (\r\n                            <Dropdown.Item href=\"#/action\">{option}</Dropdown.Item>\r\n                        ))}\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n\r\n            </div>\r\n        } else return <h4>monivalinnat</h4>\r\n    }) : (null);\r\n\r\n    return (\r\n        <>\r\n            <Container fluid className=\"mt-5 mb-5\">\r\n                <Row className=\"mr-100\">\r\n                    <Col md=\"auto\" className=\"mx-5\">\r\n                        <Sidebar />\r\n                    </Col>\r\n                    <Col className=\"text-center resultsSheet\">\r\n                        <h4>Here you can answer the <i>{selectedSurvey.surveyTitle}</i> survey</h4>\r\n                        <p><b>Description of the survey:</b> {selectedSurvey.surveyDescription}</p>\r\n                        {listSurveyQuestions}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n\r\n    )\r\n};\r\n\r\nexport default AnswerSurvey"],"mappings":"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"},"metadata":{},"sourceType":"module"}