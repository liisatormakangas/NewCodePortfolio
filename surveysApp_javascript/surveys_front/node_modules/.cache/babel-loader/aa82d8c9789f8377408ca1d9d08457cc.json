{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\liisa\\\\Documents\\\\JavaScript Traning\\\\ReferenceProject\\\\visualizing_surveys\\\\src\\\\views\\\\CreateSurvey.js\",\n    _s = $RefreshSig$();\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./results.css\";\nimport AddInput from '../components/AddInput.js';\nimport AddDropdown from '../components/AddDropdown.js';\nimport AddFreetext from '../components/AddFreetext.js';\nimport Sidebar from '../components/Sidebar.js';\nimport { useSurveyContext } from \"../contexts/SurveyContext.js\";\nimport Container from 'react-bootstrap/Container';\nimport Stack from 'react-bootstrap/Stack';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport { Trash } from 'react-bootstrap-icons';\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreateSurvey = () => {\n  _s();\n\n  const {\n    getNewId,\n    addSurvey,\n    selectedSurvey,\n    setSelectedSurvey,\n    modifiedSurvey\n  } = useSurveyContext();\n  const [questionType, setQuestionType] = useState(\"\");\n  const [modifyIsActive, setModifyIsActive] = useState(false);\n  const [newQuestionTitle, setNewQuestionTitle] = useState(\"\");\n  const [newDropDownOption, setNewDropdownOption] = useState(\"\");\n  const [newSurvey, setNewSurvey] = useState({\n    surveyTitle: \"\",\n    surveyDescription: \"\",\n    questions: [],\n    answers: []\n  });\n  useEffect(() => {\n    const surveyState = selectedSurvey.surveyTitle ? {\n      surveyTitle: selectedSurvey.surveyTitle,\n      surveyDescription: selectedSurvey.surveyDescription,\n      questions: selectedSurvey.questions,\n      answers: selectedSurvey.answers,\n      id: selectedSurvey.id\n    } : {\n      surveyTitle: \"\",\n      surveyDescription: \"\",\n      questions: [],\n      answers: []\n    };\n    setNewSurvey(surveyState);\n  }, [selectedSurvey]);\n  const navigate = useNavigate();\n\n  const handleClick = type => {\n    setQuestionType(type);\n  };\n\n  const createSurveyTitle = event => {\n    setNewSurvey({ ...newSurvey,\n      surveyTitle: event.target.value\n    });\n  };\n\n  const createSurveyDescription = event => {\n    setNewSurvey({ ...newSurvey,\n      surveyDescription: event.target.value\n    });\n  };\n\n  const createQuestion = (questionTitle, dropdownQuestionOptions, questionType) => {\n    const newQuestion = {\n      questionTitle,\n      dropdownQuestionOptions,\n      questionType,\n      questionId: getNewId()\n    };\n    setNewSurvey({ ...newSurvey,\n      questions: [...newSurvey.questions, newQuestion]\n    });\n  };\n\n  const removeQuestion = question => {\n    const remainingQuestions = newSurvey.questions.filter(item => item.questionId !== question.questionId);\n    setNewSurvey({ ...newSurvey,\n      questions: remainingQuestions\n    });\n  };\n\n  const modifySurveyQuestion = event => {\n    setNewQuestionTitle(event.target.value);\n  };\n\n  const handleModify = question => {\n    //const modifiedQuestionRemoved = newSurvey.questions.filter((q) => question.questionId !== q.questionId);\n    //const newQuestionAdded = modifiedQuestionRemoved.concat({ questionTitle: newQuestionTitle, dropdownQuestionOptions: question.dropdownQuestionOptions, questionType: question.questionType, questionId: question.questionId })\n    setNewSurvey({ ...newSurvey,\n      questions: newSurvey.questions.map(q => {\n        if (q.questionId === question.questionId) {\n          q.questionTitle = newQuestionTitle;\n        }\n\n        return q;\n      })\n    });\n  };\n\n  const modifyDropDownOption = event => {\n    setNewDropdownOption(event.target.value);\n  };\n\n  const handleModifyOption = (question, option) => {\n    setNewSurvey({ ...newSurvey,\n      questions: newSurvey.questions.map(q => {\n        if (q.questionId === question.questionId) {\n          q.dropdownQuestionOptions.map(dqo => {\n            if (dqo === option) {\n              dqo = newDropDownOption;\n            }\n\n            console.log(dqo);\n            return dqo;\n          });\n        }\n\n        ;\n        console.log(q);\n        return q;\n      })\n    });\n  };\n\n  const handleSave = newSurvey => {\n    return modifyIsActive ? modifySurvey(newSurvey) : addNewSurvey(newSurvey);\n  };\n\n  const modifySurvey = newSurvey => {\n    modifiedSurvey(newSurvey, selectedSurvey.id);\n    setSelectedSurvey({});\n    navigate(\"/thanks\", {\n      replace: true,\n      state: `The modified survey has now been saved succesfully.`\n    });\n  };\n\n  const addNewSurvey = newSurvey => {\n    addSurvey(newSurvey);\n    setSelectedSurvey({});\n    navigate(\"/thanks\", {\n      replace: true,\n      state: `Thank you for creating the ${newSurvey.surveyTitle} survey! The survey has now been saved succesfully.`\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-4 text-left\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"To modify or delete an existing survey:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setModifyIsActive(true),\n        variant: \"outline-secondary\",\n        children: \"Modify/delete an existing survey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"mt-5\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [modifyIsActive ? /*#__PURE__*/_jsxDEV(Col, {\n          xs: 3,\n          className: \"mx-4\",\n          children: /*#__PURE__*/_jsxDEV(Sidebar, {\n            modifyIsActive: modifyIsActive\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Col, {\n          xs: 2,\n          className: \"mx-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 6,\n          className: \"text-left mx-4 resultsSheet\",\n          children: [modifyIsActive ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: selectedSurvey.surveyTitle ? /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Modify: \", /*#__PURE__*/_jsxDEV(\"i\", {\n                children: selectedSurvey.surveyTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 75\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 63\n            }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Select a survey to modify from the left sidebar by clicking a survey name. If you want to delete a survey, use the trash-icon.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"To create a question, choose what kind of a question do you want to use. The question types are: dropdown, multiple choices and free text.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            style: {\n              background: \"#c9c8b9\",\n              height: \"8px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            gap: 3,\n            children: [/*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Give your survey a short and descriptive title:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                onChange: createSurveyTitle,\n                type: \"text\",\n                defaultValue: newSurvey.surveyTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Write a short description of the survey:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"textarea\",\n                onChange: createSurveyDescription,\n                rows: 3,\n                defaultValue: newSurvey.surveyDescription\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 29\n            }, this), newSurvey.questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                borderStyle: \"solid\",\n                borderColor: \"#c9c8b9\",\n                borderWidth: \"4px\",\n                padding: \"10px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Form, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: [\"Question \", newSurvey.questions.indexOf(question) + 1, \". (\", question.questionType, \")\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 193,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    onChange: modifySurveyQuestion,\n                    defaultValue: question.questionTitle\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                  \"aria-label\": \"Edit tools\",\n                  children: [/*#__PURE__*/_jsxDEV(OverlayTrigger, {\n                    placement: \"top\",\n                    overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n                      id: \"edit\",\n                      children: \"Save modified question\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 198,\n                      columnNumber: 97\n                    }, this),\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      onClick: () => handleModify(question),\n                      size: \"sm\",\n                      variant: \"outline-dark\",\n                      children: \"Save changes\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 199,\n                      columnNumber: 49\n                    }, this)\n                  }, \"edit\", false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n                    placement: \"top\",\n                    overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n                      id: \"delete\",\n                      children: \"Delete question\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 202,\n                      columnNumber: 58\n                    }, this),\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      onClick: () => removeQuestion(question),\n                      size: \"sm\",\n                      variant: \"outline-dark\",\n                      children: /*#__PURE__*/_jsxDEV(Trash, {\n                        className: \"bi bi-trash\",\n                        size: 20\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 204,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 203,\n                      columnNumber: 49\n                    }, this)\n                  }, \"delete\", false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 37\n              }, this), question.questionType === \"dropdown\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Dropdown options: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 45\n                }, this), question.dropdownQuestionOptions.map(option => /*#__PURE__*/_jsxDEV(InputGroup, {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                    onChange: modifyDropDownOption,\n                    style: {\n                      width: \"300px\",\n                      marginLeft: \"100px\",\n                      marginRight: \"100px\"\n                    },\n                    defaultValue: option\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                    \"aria-label\": \"Edit tools\",\n                    children: [/*#__PURE__*/_jsxDEV(OverlayTrigger, {\n                      placement: \"top\",\n                      overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n                        id: \"edit\",\n                        children: \"Save modified option\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 217,\n                        columnNumber: 109\n                      }, this),\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        onClick: () => handleModifyOption(question, option),\n                        size: \"sm\",\n                        variant: \"outline-dark\",\n                        children: \"Save changes\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 218,\n                        columnNumber: 61\n                      }, this)\n                    }, \"edit\", false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n                      placement: \"top\",\n                      overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n                        id: \"delete\",\n                        children: \"Delete question\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 221,\n                        columnNumber: 70\n                      }, this),\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        onClick: () => removeQuestion(question),\n                        size: \"sm\",\n                        variant: \"outline-dark\",\n                        children: /*#__PURE__*/_jsxDEV(Trash, {\n                          className: \"bi bi-trash\",\n                          size: 20\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 223,\n                          columnNumber: 65\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 222,\n                        columnNumber: 61\n                      }, this)\n                    }, \"delete\", false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 49\n                }, this)), /*#__PURE__*/_jsxDEV(Stack, {\n                  className: \"text-center\",\n                  style: {\n                    marginRight: \"200px\",\n                    marginLeft: \"200px\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-dark\",\n                    children: \"Ann new dropdown option\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true) : null, question.questionType === \"multiple-choice\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Multiple choice options: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 45\n                }, this), question.dropdownQuestionOptions.map(option => /*#__PURE__*/_jsxDEV(InputGroup, {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                    onChange: modifyDropDownOption,\n                    style: {\n                      width: \"300px\",\n                      marginLeft: \"100px\",\n                      marginRight: \"100px\"\n                    },\n                    defaultValue: option\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                    \"aria-label\": \"Edit tools\",\n                    children: [/*#__PURE__*/_jsxDEV(OverlayTrigger, {\n                      placement: \"top\",\n                      overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n                        id: \"edit\",\n                        children: \"Save modified option\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 243,\n                        columnNumber: 109\n                      }, this),\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        onClick: () => handleModifyOption(question, option),\n                        size: \"sm\",\n                        variant: \"outline-dark\",\n                        children: \"Save changes\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 244,\n                        columnNumber: 61\n                      }, this)\n                    }, \"edit\", false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 243,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n                      placement: \"top\",\n                      overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n                        id: \"delete\",\n                        children: \"Delete question\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 247,\n                        columnNumber: 70\n                      }, this),\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        onClick: () => removeQuestion(question),\n                        size: \"sm\",\n                        variant: \"outline-dark\",\n                        children: /*#__PURE__*/_jsxDEV(Trash, {\n                          className: \"bi bi-trash\",\n                          size: 20\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 249,\n                          columnNumber: 65\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 248,\n                        columnNumber: 61\n                      }, this)\n                    }, \"delete\", false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 246,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 49\n                }, this)), /*#__PURE__*/_jsxDEV(Stack, {\n                  className: \"text-center\",\n                  style: {\n                    marginRight: \"200px\",\n                    marginLeft: \"200px\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-dark\",\n                    children: \"Ann new option\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true) : null]\n            }, question.questionId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 33\n            }, this)), /*#__PURE__*/_jsxDEV(\"hr\", {\n              style: {\n                background: \"#c9c8b9\",\n                height: \"8px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Choose what kind of a question to add:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              gap: 1,\n              \"aria-label\": \"Basic example\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleClick(\"dropdown\"),\n                variant: \"outline-dark\",\n                children: \"Dropdown + \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleClick(\"multiple-choice\"),\n                variant: \"outline-dark\",\n                children: \"Multiple choice + \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleClick(\"freetext\"),\n                variant: \"outline-dark\",\n                children: \"Free text + \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [questionType === \"dropdown\" ? /*#__PURE__*/_jsxDEV(AddDropdown, {\n                createQuestion: createQuestion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 66\n              }, this) : null, questionType === \"multiple-choice\" ? /*#__PURE__*/_jsxDEV(AddInput, {\n                createQuestion: createQuestion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 73\n              }, this) : null, questionType === \"freetext\" ? /*#__PURE__*/_jsxDEV(AddFreetext, {\n                createQuestion: createQuestion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 66\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSave(newSurvey),\n              type: \"submit\",\n              children: \"Submit survey\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CreateSurvey, \"ObbpWET4zh0Em20yet9hDWssaes=\", false, function () {\n  return [useSurveyContext, useNavigate];\n});\n\n_c = CreateSurvey;\nexport default CreateSurvey;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateSurvey\");","map":{"version":3,"names":["AddInput","AddDropdown","AddFreetext","Sidebar","useSurveyContext","Container","Stack","Form","Row","Col","Button","ButtonGroup","InputGroup","OverlayTrigger","Tooltip","Trash","React","useEffect","useState","useNavigate","CreateSurvey","getNewId","addSurvey","selectedSurvey","setSelectedSurvey","modifiedSurvey","questionType","setQuestionType","modifyIsActive","setModifyIsActive","newQuestionTitle","setNewQuestionTitle","newDropDownOption","setNewDropdownOption","newSurvey","setNewSurvey","surveyTitle","surveyDescription","questions","answers","surveyState","id","navigate","handleClick","type","createSurveyTitle","event","target","value","createSurveyDescription","createQuestion","questionTitle","dropdownQuestionOptions","newQuestion","questionId","removeQuestion","question","remainingQuestions","filter","item","modifySurveyQuestion","handleModify","map","q","modifyDropDownOption","handleModifyOption","option","dqo","console","log","handleSave","modifySurvey","addNewSurvey","replace","state","background","height","borderStyle","borderColor","borderWidth","padding","indexOf","width","marginLeft","marginRight"],"sources":["C:/Users/liisa/Documents/JavaScript Traning/ReferenceProject/visualizing_surveys/src/views/CreateSurvey.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./results.css\"\r\n\r\nimport AddInput from '../components/AddInput.js';\r\nimport AddDropdown from '../components/AddDropdown.js';\r\nimport AddFreetext from '../components/AddFreetext.js';\r\nimport Sidebar from '../components/Sidebar.js'\r\n\r\nimport { useSurveyContext } from \"../contexts/SurveyContext.js\";\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Stack from 'react-bootstrap/Stack';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\nimport { Trash } from 'react-bootstrap-icons';\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nconst CreateSurvey = () => {\r\n\r\n    const { getNewId, addSurvey, selectedSurvey, setSelectedSurvey, modifiedSurvey } = useSurveyContext();\r\n\r\n    const [questionType, setQuestionType] = useState(\"\");\r\n    const [modifyIsActive, setModifyIsActive] = useState(false);\r\n    const [newQuestionTitle, setNewQuestionTitle] = useState(\"\")\r\n    const [newDropDownOption, setNewDropdownOption] = useState(\"\")\r\n\r\n    const [newSurvey, setNewSurvey] = useState({\r\n        surveyTitle: \"\",\r\n        surveyDescription: \"\",\r\n        questions: [],\r\n        answers: []\r\n    });\r\n\r\n    useEffect(() => {\r\n        const surveyState = selectedSurvey.surveyTitle ? {\r\n            surveyTitle: selectedSurvey.surveyTitle,\r\n            surveyDescription: selectedSurvey.surveyDescription,\r\n            questions: selectedSurvey.questions,\r\n            answers: selectedSurvey.answers,\r\n            id: selectedSurvey.id\r\n        } : {\r\n            surveyTitle: \"\",\r\n            surveyDescription: \"\",\r\n            questions: [],\r\n            answers: []\r\n        };\r\n        setNewSurvey(surveyState)\r\n    }, [selectedSurvey])\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleClick = (type) => {\r\n        setQuestionType(type);\r\n    };\r\n\r\n    const createSurveyTitle = (event) => {\r\n        setNewSurvey({ ...newSurvey, surveyTitle: event.target.value });\r\n    };\r\n\r\n    const createSurveyDescription = (event) => {\r\n        setNewSurvey({ ...newSurvey, surveyDescription: event.target.value });\r\n    };\r\n\r\n    const createQuestion = (questionTitle, dropdownQuestionOptions, questionType) => {\r\n        const newQuestion = {\r\n            questionTitle,\r\n            dropdownQuestionOptions,\r\n            questionType,\r\n            questionId: getNewId()\r\n        };\r\n        setNewSurvey({\r\n            ...newSurvey,\r\n            questions: [...newSurvey.questions, newQuestion]\r\n        });\r\n    };\r\n\r\n    const removeQuestion = (question) => {\r\n        const remainingQuestions = newSurvey.questions.filter((item) => item.questionId !== question.questionId);\r\n        setNewSurvey({\r\n            ...newSurvey,\r\n            questions: remainingQuestions\r\n        });\r\n    };\r\n\r\n    const modifySurveyQuestion = (event) => {\r\n        setNewQuestionTitle(event.target.value)\r\n    };\r\n\r\n    const handleModify = (question) => {\r\n        //const modifiedQuestionRemoved = newSurvey.questions.filter((q) => question.questionId !== q.questionId);\r\n        //const newQuestionAdded = modifiedQuestionRemoved.concat({ questionTitle: newQuestionTitle, dropdownQuestionOptions: question.dropdownQuestionOptions, questionType: question.questionType, questionId: question.questionId })\r\n\r\n        setNewSurvey({\r\n            ...newSurvey,\r\n            questions: newSurvey.questions.map(q => {\r\n                if (q.questionId === question.questionId) {\r\n                    q.questionTitle = newQuestionTitle;\r\n                }\r\n                return q\r\n            })\r\n        })\r\n    };\r\n\r\n    const modifyDropDownOption = (event) => {\r\n        setNewDropdownOption(event.target.value)\r\n    };\r\n\r\n    const handleModifyOption = (question, option) => {      \r\n        setNewSurvey({\r\n            ...newSurvey,\r\n            questions: newSurvey.questions.map(q => {\r\n                if (q.questionId === question.questionId) {\r\n                    q.dropdownQuestionOptions.map(dqo => {\r\n                        if (dqo === option) {\r\n                            dqo = newDropDownOption\r\n                        }\r\n                        console.log(dqo);\r\n                        return dqo;\r\n                    })\r\n                };\r\n                console.log(q);\r\n                return q\r\n            })\r\n        })\r\n    };\r\n\r\n    const handleSave = (newSurvey) => {\r\n        return modifyIsActive ? modifySurvey(newSurvey) : addNewSurvey(newSurvey)\r\n    };\r\n\r\n    const modifySurvey = (newSurvey) => {\r\n        modifiedSurvey(newSurvey, selectedSurvey.id)\r\n        setSelectedSurvey({});\r\n        navigate(\"/thanks\", { replace: true, state: `The modified survey has now been saved succesfully.` });\r\n    };\r\n\r\n    const addNewSurvey = (newSurvey) => {\r\n        addSurvey(newSurvey);\r\n        setSelectedSurvey({});\r\n        navigate(\"/thanks\", { replace: true, state: `Thank you for creating the ${newSurvey.surveyTitle} survey! The survey has now been saved succesfully.` });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Container className='mt-4 text-left'>\r\n                <h5>To modify or delete an existing survey:</h5>\r\n                <Button onClick={() => setModifyIsActive(true)} variant=\"outline-secondary\">Modify/delete an existing survey</Button>{' '}\r\n            </Container>\r\n\r\n            <Container fluid className=\"mt-5\">\r\n                <Row>\r\n                    {modifyIsActive ?\r\n                        <Col xs={3} className=\"mx-4\">\r\n                            <Sidebar modifyIsActive={modifyIsActive} />\r\n                        </Col>\r\n                        : <Col xs={2} className=\"mx-4\"></Col>}\r\n                    <Col xs={6} className='text-left mx-4 resultsSheet'>\r\n                        {modifyIsActive ?\r\n                            <div>\r\n                                {selectedSurvey.surveyTitle ? <h4>Modify: <i>{selectedSurvey.surveyTitle}</i></h4>\r\n                                    : <h4>Select a survey to modify from the left sidebar by clicking a survey name. If you want to delete a survey, use the trash-icon.</h4>}\r\n                            </div>\r\n                            :\r\n                            <h4>To create a question, choose what kind of a question do you want to use.\r\n                                The question types are: dropdown, multiple choices and free text.</h4>}\r\n\r\n                        <hr style={{ background: \"#c9c8b9\", height: \"8px\" }} />\r\n\r\n                        <Stack gap={3}>\r\n                            <Form>\r\n                                <Form.Label>Give your survey a short and descriptive title:</Form.Label>\r\n                                <Form.Control onChange={createSurveyTitle} type=\"text\" defaultValue={newSurvey.surveyTitle} />\r\n\r\n                                <Form.Label>Write a short description of the survey:</Form.Label>\r\n                                <Form.Control as=\"textarea\" onChange={createSurveyDescription} rows={3}\r\n                                    defaultValue={newSurvey.surveyDescription} />\r\n                            </Form>\r\n\r\n                            {newSurvey.questions.map(question =>\r\n                                <div key={question.questionId} style={{ borderStyle: \"solid\", borderColor: \"#c9c8b9\", borderWidth: \"4px\", padding: \"10px\" }}>\r\n                                    <>\r\n                                        <Form>\r\n                                            <Form.Label><b>Question {newSurvey.questions.indexOf(question) + 1}. ({question.questionType})</b></Form.Label>\r\n                                            <Form.Control onChange={modifySurveyQuestion} defaultValue={question.questionTitle} />\r\n                                        </Form>\r\n\r\n                                        <ButtonGroup aria-label=\"Edit tools\">\r\n                                            <OverlayTrigger key=\"edit\" placement=\"top\" overlay={<Tooltip id=\"edit\">Save modified question</Tooltip>}>\r\n                                                <Button onClick={() => handleModify(question)} size=\"sm\" variant=\"outline-dark\">Save changes</Button>\r\n                                            </OverlayTrigger>\r\n                                            <OverlayTrigger key=\"delete\" placement=\"top\"\r\n                                                overlay={<Tooltip id=\"delete\">Delete question</Tooltip>}>\r\n                                                <Button onClick={() => removeQuestion(question)} size=\"sm\" variant=\"outline-dark\">\r\n                                                    <Trash className='bi bi-trash' size={20}></Trash>\r\n                                                </Button>\r\n                                            </OverlayTrigger>\r\n                                        </ButtonGroup>\r\n                                    </>\r\n                                    <br />\r\n                                    {(question.questionType === \"dropdown\") ?\r\n                                        <>\r\n                                            <Form.Label><b>Dropdown options: </b></Form.Label>\r\n                                            {question.dropdownQuestionOptions.map(option =>\r\n                                                <InputGroup className=\"mb-3\">\r\n                                                    <Form.Control onChange={modifyDropDownOption} style={{ width: \"300px\", marginLeft: \"100px\", marginRight: \"100px\" }} defaultValue={option} />\r\n                                                    <ButtonGroup aria-label=\"Edit tools\">\r\n                                                        <OverlayTrigger key=\"edit\" placement=\"top\" overlay={<Tooltip id=\"edit\">Save modified option</Tooltip>}>\r\n                                                            <Button onClick={() => handleModifyOption(question, option)} size=\"sm\" variant=\"outline-dark\">Save changes</Button>\r\n                                                        </OverlayTrigger>\r\n                                                        <OverlayTrigger key=\"delete\" placement=\"top\"\r\n                                                            overlay={<Tooltip id=\"delete\">Delete question</Tooltip>}>\r\n                                                            <Button onClick={() => removeQuestion(question)} size=\"sm\" variant=\"outline-dark\">\r\n                                                                <Trash className='bi bi-trash' size={20}></Trash>\r\n                                                            </Button>\r\n                                                        </OverlayTrigger>\r\n                                                    </ButtonGroup>\r\n                                                </InputGroup>\r\n\r\n                                            )}\r\n                                            <Stack className=\"text-center\" style={{ marginRight: \"200px\", marginLeft: \"200px\" }}>\r\n                                                <Button variant=\"outline-dark\">Ann new dropdown option</Button>\r\n                                            </Stack>\r\n                                        </>\r\n                                        : (null)}\r\n\r\n                                    {(question.questionType === \"multiple-choice\") ?\r\n                                        <>\r\n                                            <Form.Label><b>Multiple choice options: </b></Form.Label>\r\n                                            {question.dropdownQuestionOptions.map(option =>\r\n                                                <InputGroup className=\"mb-3\">\r\n                                                    <Form.Control onChange={modifyDropDownOption} style={{ width: \"300px\", marginLeft: \"100px\", marginRight: \"100px\" }} defaultValue={option} />\r\n                                                    <ButtonGroup aria-label=\"Edit tools\">\r\n                                                        <OverlayTrigger key=\"edit\" placement=\"top\" overlay={<Tooltip id=\"edit\">Save modified option</Tooltip>}>\r\n                                                            <Button onClick={() => handleModifyOption(question, option)} size=\"sm\" variant=\"outline-dark\">Save changes</Button>\r\n                                                        </OverlayTrigger>\r\n                                                        <OverlayTrigger key=\"delete\" placement=\"top\"\r\n                                                            overlay={<Tooltip id=\"delete\">Delete question</Tooltip>}>\r\n                                                            <Button onClick={() => removeQuestion(question)} size=\"sm\" variant=\"outline-dark\">\r\n                                                                <Trash className='bi bi-trash' size={20}></Trash>\r\n                                                            </Button>\r\n                                                        </OverlayTrigger>\r\n                                                    </ButtonGroup>\r\n                                                </InputGroup>\r\n                                            )}\r\n                                            <Stack className=\"text-center\" style={{ marginRight: \"200px\", marginLeft: \"200px\" }}>\r\n                                                <Button variant=\"outline-dark\">Ann new option</Button>\r\n                                            </Stack>\r\n                                        </>\r\n                                        : (null)}\r\n                                </div>\r\n                            )}\r\n                            <hr style={{ background: \"#c9c8b9\", height: \"8px\" }} />\r\n                            <p>Choose what kind of a question to add:</p>\r\n\r\n                            <ButtonGroup gap={1} aria-label=\"Basic example\">\r\n                                <Button onClick={() => handleClick(\"dropdown\")} variant=\"outline-dark\">Dropdown + </Button>\r\n                                <Button onClick={() => handleClick(\"multiple-choice\")} variant=\"outline-dark\">Multiple choice + </Button>\r\n                                <Button onClick={() => handleClick(\"freetext\")} variant=\"outline-dark\">Free text + </Button>\r\n                            </ButtonGroup>\r\n                            <div>\r\n                                {(questionType === \"dropdown\") ? <AddDropdown createQuestion={createQuestion} /> : null}\r\n                                {(questionType === \"multiple-choice\") ? <AddInput createQuestion={createQuestion} /> : null}\r\n                                {(questionType === \"freetext\") ? <AddFreetext createQuestion={createQuestion} /> : null}\r\n                            </div>\r\n                            <button onClick={() => handleSave(newSurvey)} type=\"submit\">Submit survey</button>\r\n                        </Stack>\r\n\r\n                    </Col>\r\n                </Row >\r\n            </Container >\r\n        </>\r\n    )\r\n};\r\nexport default CreateSurvey;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}