{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\liisa\\\\Documents\\\\JavaScript Traning\\\\ReferenceProject\\\\visualizing_surveys\\\\src\\\\views\\\\CreateSurvey.js\",\n    _s = $RefreshSig$();\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./results.css\";\nimport AddDropdown from '../components/AddDropdown.js';\nimport AddFreetext from '../components/AddFreetext.js';\nimport AddNewOption from '../components/AddNewOption';\nimport Sidebar from '../components/Sidebar.js';\nimport { useSurveyContext } from \"../contexts/SurveyContext.js\";\nimport Container from 'react-bootstrap/Container';\nimport Stack from 'react-bootstrap/Stack';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport Alert from 'react-bootstrap/Alert';\nimport { Trash } from 'react-bootstrap-icons';\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreateSurvey = () => {\n  _s();\n\n  const {\n    getNewId,\n    addSurvey,\n    selectedSurvey,\n    setSelectedSurvey,\n    modifiedSurvey\n  } = useSurveyContext();\n  const [chosenQuestionType, setChosenQuestionType] = useState(\"\");\n  const [modifyIsActive, setModifyIsActive] = useState(false);\n  const [newQuestionTitle, setNewQuestionTitle] = useState(\"\");\n  const [newDropDownOption, setNewDropdownOption] = useState(\"\");\n  const [addOptionIsActive, setAddOptionIsActive] = useState(false);\n  const [questionToModify, setQuestionToModify] = useState();\n  const [optionIsValid, setOptionIsValid] = useState(false);\n  const [newSurvey, setNewSurvey] = useState({\n    surveyTitle: \"\",\n    surveyDescription: \"\",\n    questions: [],\n    answers: []\n  });\n  useEffect(() => {\n    const surveyState = selectedSurvey.surveyTitle ? {\n      surveyTitle: selectedSurvey.surveyTitle,\n      surveyDescription: selectedSurvey.surveyDescription,\n      questions: selectedSurvey.questions,\n      answers: selectedSurvey.answers,\n      id: selectedSurvey.id\n    } : {\n      surveyTitle: \"\",\n      surveyDescription: \"\",\n      questions: [],\n      answers: []\n    };\n    setNewSurvey(surveyState);\n  }, [selectedSurvey]);\n  const navigate = useNavigate();\n\n  const handleQuestionType = type => {\n    setChosenQuestionType(type);\n  };\n\n  const createSurveyTitle = event => {\n    setNewSurvey({ ...newSurvey,\n      surveyTitle: event.target.value\n    });\n  };\n\n  const createSurveyDescription = event => {\n    setNewSurvey({ ...newSurvey,\n      surveyDescription: event.target.value\n    });\n  };\n\n  const createQuestion = (questionTitle, dropdownQuestionOptions) => {\n    const questionType = chosenQuestionType;\n    const newQuestion = {\n      questionTitle,\n      dropdownQuestionOptions,\n      questionType,\n      questionId: getNewId()\n    };\n    setNewSurvey({ ...newSurvey,\n      questions: [...newSurvey.questions, newQuestion]\n    });\n  };\n\n  const createNewOption = option => {\n    if (option !== \"\") {\n      setOptionIsValid(true);\n      setNewSurvey({ ...newSurvey,\n        questions: newSurvey.questions.map(q => {\n          if (q.questionId === questionToModify.questionId) {\n            q.dropdownQuestionOptions.push(option);\n          }\n\n          ;\n          return q;\n        })\n      });\n      setAddOptionIsActive(false);\n      setQuestionToModify();\n    } else setOptionIsValid(false);\n  };\n\n  const removeQuestion = question => {\n    const remainingQuestions = newSurvey.questions.filter(item => item.questionId !== question.questionId);\n    setNewSurvey({ ...newSurvey,\n      questions: remainingQuestions\n    });\n  };\n\n  const removeOption = (question, option) => {\n    setNewSurvey({ ...newSurvey,\n      questions: newSurvey.questions.map(q => {\n        if ((q.questionType === \"dropdown\" || q.questionType === \"multiple-choice\") && q.questionId === question.questionId) {\n          const remainingOptions = q.dropdownQuestionOptions.filter(opt => opt !== option);\n          q.dropdownQuestionOptions = remainingOptions;\n        }\n\n        ;\n        return q;\n      })\n    });\n  };\n\n  const addNewQuestionOption = question => {\n    setAddOptionIsActive(true);\n    setQuestionToModify(question);\n  };\n\n  const modifyQuestionTitle = event => {\n    setNewQuestionTitle(event.target.value);\n  };\n\n  const saveModifiedTitle = question => {\n    setNewSurvey({ ...newSurvey,\n      questions: newSurvey.questions.map(q => {\n        if (q.questionId === question.questionId) {\n          q.questionTitle = newQuestionTitle;\n        }\n\n        return q;\n      })\n    });\n  };\n\n  const modifyQuestionOption = event => {\n    setNewDropdownOption(event.target.value);\n  };\n\n  const saveModifiedOption = (question, option) => {\n    if (newDropDownOption !== \"\") {\n      setNewSurvey({ ...newSurvey,\n        questions: newSurvey.questions.map(q => {\n          if ((q.questionType === \"dropdown\" || q.questionType === \"multiple-choice\") && q.questionId === question.questionId) {\n            const opt = [];\n            q.dropdownQuestionOptions.map(dqo => {\n              if (dqo === option) {\n                dqo = newDropDownOption;\n              }\n\n              opt.push(dqo);\n              q.dropdownQuestionOptions = opt;\n              return q;\n            });\n          }\n\n          ;\n          return q;\n        })\n      });\n    } else setOptionIsValid(false);\n  };\n\n  const handleSave = newSurvey => {\n    return modifyIsActive ? modifySurvey(newSurvey) : addNewSurvey(newSurvey);\n  };\n\n  const modifySurvey = newSurvey => {\n    modifiedSurvey(newSurvey, selectedSurvey.id);\n    setSelectedSurvey({});\n    navigate(\"/thanks\", {\n      replace: true,\n      state: `The modified survey has now been saved succesfully.`\n    });\n  };\n\n  const addNewSurvey = newSurvey => {\n    addSurvey(newSurvey);\n    setSelectedSurvey({});\n    navigate(\"/thanks\", {\n      replace: true,\n      state: `Thank you for creating the ${newSurvey.surveyTitle} survey! The survey has now been saved succesfully.`\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: optionIsValid ? null : /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"secondary\",\n        children: \"Empty input is not allowed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-4 text-left\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"To modify or delete an existing survey:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setModifyIsActive(true),\n        variant: \"outline-secondary\",\n        children: \"Modify/delete an existing survey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"mt-5\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [modifyIsActive ? /*#__PURE__*/_jsxDEV(Col, {\n          xs: 3,\n          className: \"mx-4\",\n          children: /*#__PURE__*/_jsxDEV(Sidebar, {\n            modifyIsActive: modifyIsActive\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Col, {\n          xs: 2,\n          className: \"mx-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 6,\n          className: \"text-left mx-4 resultsSheet\",\n          children: [modifyIsActive ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: selectedSurvey.surveyTitle ? /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Modify: \", /*#__PURE__*/_jsxDEV(\"i\", {\n                children: selectedSurvey.surveyTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 75\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 63\n            }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Select a survey to modify from the left sidebar by clicking a survey name. If you want to delete a survey, use the trash-icon.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"To create a question, choose what kind of a question do you want to use. The question types are: dropdown, multiple choices and free text.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            style: {\n              background: \"#c9c8b9\",\n              height: \"8px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            gap: 3,\n            children: [/*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Give your survey a short and descriptive title:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                onChange: createSurveyTitle,\n                type: \"text\",\n                defaultValue: newSurvey.surveyTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Write a short description of the survey:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"textarea\",\n                onChange: createSurveyDescription,\n                rows: 3,\n                defaultValue: newSurvey.surveyDescription\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 29\n            }, this), newSurvey.questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                borderStyle: \"solid\",\n                borderColor: \"#c9c8b9\",\n                borderWidth: \"4px\",\n                padding: \"10px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Form, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: [\"Question \", newSurvey.questions.indexOf(question) + 1, \". (\", question.questionType, \")\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 239,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    onChange: modifyQuestionTitle,\n                    defaultValue: question.questionTitle\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                  \"aria-label\": \"Edit tools\",\n                  children: [/*#__PURE__*/_jsxDEV(OverlayTrigger, {\n                    placement: \"top\",\n                    overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n                      id: \"edit\",\n                      children: \"Save modified question\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 244,\n                      columnNumber: 97\n                    }, this),\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      onClick: () => saveModifiedTitle(question),\n                      size: \"sm\",\n                      variant: \"outline-dark\",\n                      children: \"Save changes\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 245,\n                      columnNumber: 49\n                    }, this)\n                  }, \"edit\", false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n                    placement: \"top\",\n                    overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n                      id: \"delete\",\n                      children: \"Delete question\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 248,\n                      columnNumber: 58\n                    }, this),\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      onClick: () => removeQuestion(question),\n                      size: \"sm\",\n                      variant: \"outline-dark\",\n                      children: /*#__PURE__*/_jsxDEV(Trash, {\n                        className: \"bi bi-trash\",\n                        size: 20\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 250,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 249,\n                      columnNumber: 49\n                    }, this)\n                  }, \"delete\", false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 37\n              }, this), question.questionType === \"dropdown\" || question.questionType === \"multiple-choice\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [question.questionType === \"dropdown\" ? /*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Dropdown options: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 61\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 49\n                }, this) : /*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Multiple choice options: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 63\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 51\n                }, this), question.dropdownQuestionOptions.map(option => /*#__PURE__*/_jsxDEV(InputGroup, {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                    onChange: modifyQuestionOption,\n                    style: {\n                      width: \"300px\",\n                      marginLeft: \"100px\",\n                      marginRight: \"100px\"\n                    },\n                    defaultValue: option\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                    \"aria-label\": \"Edit tools\",\n                    children: [/*#__PURE__*/_jsxDEV(OverlayTrigger, {\n                      placement: \"top\",\n                      overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n                        id: \"edit\",\n                        children: \"Save modified option\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 266,\n                        columnNumber: 109\n                      }, this),\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        onClick: () => saveModifiedOption(question, option),\n                        size: \"sm\",\n                        variant: \"outline-dark\",\n                        children: \"Save changes\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 267,\n                        columnNumber: 61\n                      }, this)\n                    }, \"edit\", false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 266,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n                      placement: \"top\",\n                      overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n                        id: \"delete\",\n                        children: \"Delete option\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 270,\n                        columnNumber: 70\n                      }, this),\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        onClick: () => removeOption(question, option),\n                        size: \"sm\",\n                        variant: \"outline-dark\",\n                        children: /*#__PURE__*/_jsxDEV(Trash, {\n                          className: \"bi bi-trash\",\n                          size: 20\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 272,\n                          columnNumber: 65\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 271,\n                        columnNumber: 61\n                      }, this)\n                    }, \"delete\", false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 269,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 53\n                  }, this)]\n                }, option, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 49\n                }, this)), addOptionIsActive ? /*#__PURE__*/_jsxDEV(AddNewOption, {\n                  createNewOption: createNewOption\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 66\n                }, this) : /*#__PURE__*/_jsxDEV(Stack, {\n                  className: \"text-center\",\n                  style: {\n                    marginRight: \"200px\",\n                    marginLeft: \"200px\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => addNewQuestionOption(question),\n                    variant: \"outline-dark\",\n                    children: \"Add new option\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true) : null]\n            }, question.questionId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 33\n            }, this)), /*#__PURE__*/_jsxDEV(\"hr\", {\n              style: {\n                background: \"#c9c8b9\",\n                height: \"8px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Choose what kind of a question to add:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              gap: 1,\n              \"aria-label\": \"Basic example\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleQuestionType(\"dropdown\"),\n                variant: \"outline-dark\",\n                children: \"Dropdown + \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleQuestionType(\"multiple-choice\"),\n                variant: \"outline-dark\",\n                children: \"Multiple choice + \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleQuestionType(\"freetext\"),\n                variant: \"outline-dark\",\n                children: \"Free text + \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [chosenQuestionType === \"dropdown\" ? /*#__PURE__*/_jsxDEV(AddDropdown, {\n                createQuestion: createQuestion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 72\n              }, this) : null, chosenQuestionType === \"multiple-choice\" ? /*#__PURE__*/_jsxDEV(AddDropdown, {\n                createQuestion: createQuestion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 79\n              }, this) : null, chosenQuestionType === \"freetext\" ? /*#__PURE__*/_jsxDEV(AddFreetext, {\n                createQuestion: createQuestion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 72\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSave(newSurvey),\n              type: \"submit\",\n              children: \"Submit survey\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CreateSurvey, \"ImO60ldPdvLP7T1HWmDiSlOI3hU=\", false, function () {\n  return [useSurveyContext, useNavigate];\n});\n\n_c = CreateSurvey;\nexport default CreateSurvey;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateSurvey\");","map":{"version":3,"names":["AddDropdown","AddFreetext","AddNewOption","Sidebar","useSurveyContext","Container","Stack","Form","Row","Col","Button","ButtonGroup","InputGroup","OverlayTrigger","Tooltip","Alert","Trash","React","useEffect","useState","useNavigate","CreateSurvey","getNewId","addSurvey","selectedSurvey","setSelectedSurvey","modifiedSurvey","chosenQuestionType","setChosenQuestionType","modifyIsActive","setModifyIsActive","newQuestionTitle","setNewQuestionTitle","newDropDownOption","setNewDropdownOption","addOptionIsActive","setAddOptionIsActive","questionToModify","setQuestionToModify","optionIsValid","setOptionIsValid","newSurvey","setNewSurvey","surveyTitle","surveyDescription","questions","answers","surveyState","id","navigate","handleQuestionType","type","createSurveyTitle","event","target","value","createSurveyDescription","createQuestion","questionTitle","dropdownQuestionOptions","questionType","newQuestion","questionId","createNewOption","option","map","q","push","removeQuestion","question","remainingQuestions","filter","item","removeOption","remainingOptions","opt","addNewQuestionOption","modifyQuestionTitle","saveModifiedTitle","modifyQuestionOption","saveModifiedOption","dqo","handleSave","modifySurvey","addNewSurvey","replace","state","background","height","borderStyle","borderColor","borderWidth","padding","indexOf","width","marginLeft","marginRight"],"sources":["C:/Users/liisa/Documents/JavaScript Traning/ReferenceProject/visualizing_surveys/src/views/CreateSurvey.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./results.css\"\r\n\r\nimport AddDropdown from '../components/AddDropdown.js';\r\nimport AddFreetext from '../components/AddFreetext.js';\r\nimport AddNewOption from '../components/AddNewOption';\r\nimport Sidebar from '../components/Sidebar.js'\r\n\r\nimport { useSurveyContext } from \"../contexts/SurveyContext.js\";\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Stack from 'react-bootstrap/Stack';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nimport { Trash } from 'react-bootstrap-icons';\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nconst CreateSurvey = () => {\r\n\r\n    const { getNewId, addSurvey, selectedSurvey, setSelectedSurvey, modifiedSurvey } = useSurveyContext();\r\n\r\n    const [chosenQuestionType, setChosenQuestionType] = useState(\"\");\r\n    const [modifyIsActive, setModifyIsActive] = useState(false);\r\n    const [newQuestionTitle, setNewQuestionTitle] = useState(\"\")\r\n    const [newDropDownOption, setNewDropdownOption] = useState(\"\")\r\n    const [addOptionIsActive, setAddOptionIsActive] = useState(false)\r\n    const [questionToModify, setQuestionToModify] = useState()\r\n    const [optionIsValid, setOptionIsValid] = useState(false)\r\n\r\n    const [newSurvey, setNewSurvey] = useState({\r\n        surveyTitle: \"\",\r\n        surveyDescription: \"\",\r\n        questions: [],\r\n        answers: []\r\n    });\r\n\r\n    useEffect(() => {\r\n        const surveyState = selectedSurvey.surveyTitle ? {\r\n            surveyTitle: selectedSurvey.surveyTitle,\r\n            surveyDescription: selectedSurvey.surveyDescription,\r\n            questions: selectedSurvey.questions,\r\n            answers: selectedSurvey.answers,\r\n            id: selectedSurvey.id\r\n        } : {\r\n            surveyTitle: \"\",\r\n            surveyDescription: \"\",\r\n            questions: [],\r\n            answers: []\r\n        };\r\n        setNewSurvey(surveyState)\r\n    }, [selectedSurvey])\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleQuestionType = (type) => {\r\n        setChosenQuestionType(type);\r\n    };\r\n\r\n    const createSurveyTitle = (event) => {\r\n        setNewSurvey({ ...newSurvey, surveyTitle: event.target.value });\r\n    };\r\n\r\n    const createSurveyDescription = (event) => {\r\n        setNewSurvey({ ...newSurvey, surveyDescription: event.target.value });\r\n    };\r\n\r\n    const createQuestion = (questionTitle, dropdownQuestionOptions) => {\r\n        const questionType = chosenQuestionType\r\n        const newQuestion = {\r\n            questionTitle,\r\n            dropdownQuestionOptions,\r\n            questionType,\r\n            questionId: getNewId()\r\n        };\r\n        setNewSurvey({\r\n            ...newSurvey,\r\n            questions: [...newSurvey.questions, newQuestion]\r\n        });\r\n    };\r\n\r\n    const createNewOption = (option) => {\r\n        if (option !== \"\") {\r\n            setOptionIsValid(true)\r\n            setNewSurvey({\r\n                ...newSurvey,\r\n                questions: newSurvey.questions.map(q => {\r\n                    if (q.questionId === questionToModify.questionId) {\r\n                        q.dropdownQuestionOptions.push(option);\r\n                    };\r\n                    return q\r\n                })\r\n            })\r\n            setAddOptionIsActive(false);\r\n            setQuestionToModify();\r\n\r\n        } else setOptionIsValid(false)        \r\n    };\r\n\r\n    const removeQuestion = (question) => {\r\n        const remainingQuestions = newSurvey.questions.filter((item) => item.questionId !== question.questionId);\r\n        setNewSurvey({\r\n            ...newSurvey,\r\n            questions: remainingQuestions\r\n        });\r\n    };\r\n\r\n    const removeOption = (question, option) => {\r\n        setNewSurvey({\r\n            ...newSurvey,\r\n            questions: newSurvey.questions.map(q => {\r\n                if ((q.questionType === \"dropdown\" || q.questionType === \"multiple-choice\") && q.questionId === question.questionId) {\r\n                    const remainingOptions = q.dropdownQuestionOptions.filter((opt) => opt !== option)\r\n                    q.dropdownQuestionOptions = remainingOptions;\r\n                };\r\n                return q;\r\n            })\r\n        })\r\n    };\r\n\r\n    const addNewQuestionOption = (question) => {\r\n        setAddOptionIsActive(true)\r\n        setQuestionToModify(question)\r\n    };\r\n\r\n    const modifyQuestionTitle = (event) => {\r\n        setNewQuestionTitle(event.target.value)\r\n    };\r\n\r\n    const saveModifiedTitle = (question) => {\r\n        setNewSurvey({\r\n            ...newSurvey,\r\n            questions: newSurvey.questions.map(q => {\r\n                if (q.questionId === question.questionId) {\r\n                    q.questionTitle = newQuestionTitle;\r\n                }\r\n                return q\r\n            })\r\n        })\r\n    };\r\n\r\n    const modifyQuestionOption = (event) => {\r\n        setNewDropdownOption(event.target.value)\r\n    };\r\n\r\n    const saveModifiedOption = (question, option) => {\r\n        if (newDropDownOption !== \"\") {\r\n            setNewSurvey({\r\n                ...newSurvey,\r\n                questions: newSurvey.questions.map(q => {\r\n                    if ((q.questionType === \"dropdown\" || q.questionType === \"multiple-choice\") && q.questionId === question.questionId) {\r\n                        const opt = []\r\n                        q.dropdownQuestionOptions.map(dqo => {\r\n                            if (dqo === option) {\r\n                                dqo = newDropDownOption;\r\n                            }\r\n                            opt.push(dqo)\r\n                            q.dropdownQuestionOptions = opt;\r\n                            return q;\r\n                        })\r\n                    };\r\n                    return q\r\n                })\r\n            })\r\n        } else setOptionIsValid(false)\r\n    };\r\n\r\n    const handleSave = (newSurvey) => {\r\n        return modifyIsActive ? modifySurvey(newSurvey) : addNewSurvey(newSurvey)\r\n    };\r\n\r\n    const modifySurvey = (newSurvey) => {\r\n        modifiedSurvey(newSurvey, selectedSurvey.id)\r\n        setSelectedSurvey({});\r\n        navigate(\"/thanks\", { replace: true, state: `The modified survey has now been saved succesfully.` });\r\n    };\r\n\r\n    const addNewSurvey = (newSurvey) => {\r\n        addSurvey(newSurvey);\r\n        setSelectedSurvey({});\r\n        navigate(\"/thanks\", { replace: true, state: `Thank you for creating the ${newSurvey.surveyTitle} survey! The survey has now been saved succesfully.` });\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <div>\r\n            {optionIsValid ? (null) : <Alert variant=\"secondary\">Empty input is not allowed</Alert>}\r\n            \r\n            </div>\r\n            <Container className='mt-4 text-left'>\r\n                <h5>To modify or delete an existing survey:</h5>\r\n                <Button onClick={() => setModifyIsActive(true)} variant=\"outline-secondary\">Modify/delete an existing survey</Button>{' '}\r\n            </Container>\r\n\r\n            <Container fluid className=\"mt-5\">\r\n                <Row>\r\n                    {modifyIsActive ?\r\n                        <Col xs={3} className=\"mx-4\">\r\n                            <Sidebar modifyIsActive={modifyIsActive} />\r\n                        </Col>\r\n                        : <Col xs={2} className=\"mx-4\"></Col>}\r\n                    <Col xs={6} className='text-left mx-4 resultsSheet'>\r\n                        {modifyIsActive ?\r\n                            <div>\r\n                                {selectedSurvey.surveyTitle ? <h4>Modify: <i>{selectedSurvey.surveyTitle}</i></h4>\r\n                                    : <h4>Select a survey to modify from the left sidebar by clicking a survey name. If you want to delete a survey, use the trash-icon.</h4>}\r\n                            </div>\r\n                            :\r\n                            <h4>To create a question, choose what kind of a question do you want to use.\r\n                                The question types are: dropdown, multiple choices and free text.</h4>}\r\n\r\n                        <hr style={{ background: \"#c9c8b9\", height: \"8px\" }} />\r\n\r\n                        <Stack gap={3}>\r\n                            <Form>\r\n                                <Form.Label>Give your survey a short and descriptive title:</Form.Label>\r\n                                <Form.Control onChange={createSurveyTitle} type=\"text\" defaultValue={newSurvey.surveyTitle} />\r\n\r\n                                <Form.Label>Write a short description of the survey:</Form.Label>\r\n                                <Form.Control as=\"textarea\" onChange={createSurveyDescription} rows={3}\r\n                                    defaultValue={newSurvey.surveyDescription} />\r\n                            </Form>\r\n\r\n                            {newSurvey.questions.map(question =>\r\n                                <div key={question.questionId} style={{ borderStyle: \"solid\", borderColor: \"#c9c8b9\", borderWidth: \"4px\", padding: \"10px\" }}>\r\n                                    <>\r\n                                        <Form>\r\n                                            <Form.Label><b>Question {newSurvey.questions.indexOf(question) + 1}. ({question.questionType})</b></Form.Label>\r\n                                            <Form.Control onChange={modifyQuestionTitle} defaultValue={question.questionTitle} />\r\n                                        </Form>\r\n\r\n                                        <ButtonGroup aria-label=\"Edit tools\">\r\n                                            <OverlayTrigger key=\"edit\" placement=\"top\" overlay={<Tooltip id=\"edit\">Save modified question</Tooltip>}>\r\n                                                <Button onClick={() => saveModifiedTitle(question)} size=\"sm\" variant=\"outline-dark\">Save changes</Button>\r\n                                            </OverlayTrigger>\r\n                                            <OverlayTrigger key=\"delete\" placement=\"top\"\r\n                                                overlay={<Tooltip id=\"delete\">Delete question</Tooltip>}>\r\n                                                <Button onClick={() => removeQuestion(question)} size=\"sm\" variant=\"outline-dark\">\r\n                                                    <Trash className='bi bi-trash' size={20}></Trash>\r\n                                                </Button>\r\n                                            </OverlayTrigger>\r\n                                        </ButtonGroup>\r\n                                    </>\r\n                                    <br />\r\n                                    {(question.questionType === \"dropdown\" || question.questionType === \"multiple-choice\") ?\r\n                                        <>\r\n                                            {(question.questionType === \"dropdown\") ?\r\n                                                <Form.Label><b>Dropdown options: </b></Form.Label>\r\n                                                : <Form.Label><b>Multiple choice options: </b></Form.Label>}\r\n\r\n                                            {question.dropdownQuestionOptions.map(option =>\r\n                                                <InputGroup key={option} className=\"mb-3\">\r\n                                                    <Form.Control onChange={modifyQuestionOption} style={{ width: \"300px\", marginLeft: \"100px\", marginRight: \"100px\" }} defaultValue={option} />\r\n                                                    <ButtonGroup aria-label=\"Edit tools\">\r\n                                                        <OverlayTrigger key=\"edit\" placement=\"top\" overlay={<Tooltip id=\"edit\">Save modified option</Tooltip>}>\r\n                                                            <Button onClick={() => saveModifiedOption(question, option)} size=\"sm\" variant=\"outline-dark\">Save changes</Button>\r\n                                                        </OverlayTrigger>\r\n                                                        <OverlayTrigger key=\"delete\" placement=\"top\"\r\n                                                            overlay={<Tooltip id=\"delete\">Delete option</Tooltip>}>\r\n                                                            <Button onClick={() => removeOption(question, option)} size=\"sm\" variant=\"outline-dark\">\r\n                                                                <Trash className='bi bi-trash' size={20}></Trash>\r\n                                                            </Button>\r\n                                                        </OverlayTrigger>\r\n                                                    </ButtonGroup>\r\n                                                </InputGroup>\r\n                                            )}\r\n                                            {addOptionIsActive ? <AddNewOption createNewOption={createNewOption} /> :\r\n                                                <Stack className=\"text-center\" style={{ marginRight: \"200px\", marginLeft: \"200px\" }}>\r\n                                                    <Button onClick={() => addNewQuestionOption(question)} variant=\"outline-dark\">Add new option</Button>\r\n                                                </Stack>\r\n                                            }\r\n                                        </>\r\n                                        : (null)}\r\n                                </div>\r\n                            )}\r\n                            <hr style={{ background: \"#c9c8b9\", height: \"8px\" }} />\r\n                            <p>Choose what kind of a question to add:</p>\r\n\r\n                            <ButtonGroup gap={1} aria-label=\"Basic example\">\r\n                                <Button onClick={() => handleQuestionType(\"dropdown\")} variant=\"outline-dark\">Dropdown + </Button>\r\n                                <Button onClick={() => handleQuestionType(\"multiple-choice\")} variant=\"outline-dark\">Multiple choice + </Button>\r\n                                <Button onClick={() => handleQuestionType(\"freetext\")} variant=\"outline-dark\">Free text + </Button>\r\n                            </ButtonGroup>\r\n                            <div>\r\n                                {(chosenQuestionType === \"dropdown\") ? <AddDropdown createQuestion={createQuestion} /> : null}\r\n                                {(chosenQuestionType === \"multiple-choice\") ? <AddDropdown createQuestion={createQuestion} /> : null}\r\n                                {(chosenQuestionType === \"freetext\") ? <AddFreetext createQuestion={createQuestion} /> : null}\r\n                            </div>\r\n                            <button onClick={() => handleSave(newSurvey)} type=\"submit\">Submit survey</button>\r\n                        </Stack>\r\n\r\n                    </Col>\r\n                </Row >\r\n            </Container >\r\n        </>\r\n    )\r\n};\r\nexport default CreateSurvey;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}