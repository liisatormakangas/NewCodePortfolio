{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\liisa\\\\Documents\\\\JavaScript Traning\\\\ReferenceProject\\\\visualizing_surveys\\\\src\\\\views\\\\CreateSurvey.js\",\n    _s = $RefreshSig$();\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../App.css';\nimport AddInput from '../components/AddInput.js';\nimport AddDropdown from '../components/AddDropdown.js';\nimport AddFreetext from '../components/AddFreetext.js';\nimport { useTextContext } from '../contexts/TextContext.js';\nimport Container from 'react-bootstrap/Container';\nimport Stack from 'react-bootstrap/Stack';\nimport Form from 'react-bootstrap/Form';\nimport { Button, ButtonGroup } from 'react-bootstrap';\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateSurvey = () => {\n  _s();\n\n  const [surveyTitle, setSurveyTitle] = useState(\"\");\n  const [surveyDescription, setSurveyDescription] = useState(\"\");\n  const [newSurvey, setNewSurvey] = useState({\n    surveyTitle: \"\",\n    surveyDescription: \"\",\n    questions: [],\n    answers: []\n  });\n  const [questionType, setQuestionType] = useState(\"\");\n\n  const handleClick = type => {\n    setQuestionType(type);\n  }; //const { questionText } = useTextContext();\n  //console.log(questionText);\n  //{newSurvey.questions.map}//Tällä listataan kysymykset näkyville\n\n\n  const createSurveyTitle = event => {\n    setSurveyTitle(event.target.value);\n    console.log(surveyTitle);\n  };\n\n  const createSurveyDescription = event => {\n    setSurveyDescription(event.target.value);\n    console.log(surveyDescription);\n  };\n\n  const createQuestion = (questionTitle, questionType) => {\n    const newQuestion = {\n      questionTitle,\n      questionType,\n      id: newSurvey.questions.length + 1\n    };\n    setNewSurvey({ ...newSurvey,\n      questions: [...newSurvey.questions, newQuestion]\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"createSurvey\",\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      className: \"col-md-8 mx-auto my-4\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"To create a question, choose what kind of a question do you want to use. The question types are: drop-down list, input field and free text area.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        gap: 2,\n        className: \"col-sm-6 mx-auto\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Give your survey a short and descriptive title:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              onSubmit: createSurveyTitle,\n              type: \"text\",\n              placeholder: \"write title here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"\",\n              children: \"Write a short description of the survey:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              onSubmit: createSurveyDescription,\n              name: \"surveyDescription\",\n              id: \"surveyDescription\",\n              cols: \"30\",\n              rows: \"5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Choose  what kind of a question to add.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              gap: 1,\n              \"aria-label\": \"Basic example\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleClick(\"dropdown\"),\n                variant: \"primary\",\n                children: \"Dropdown + \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleClick(\"input\"),\n                variant: \"primary\",\n                children: \"Input + \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleClick(\"freetext\"),\n                variant: \"primary\",\n                children: \"Free text + \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [questionType === \"dropdown\" ? /*#__PURE__*/_jsxDEV(AddDropdown, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 66\n              }, this) : null, questionType === \"input\" ? /*#__PURE__*/_jsxDEV(AddInput, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 63\n              }, this) : null, questionType === \"freetext\" ? /*#__PURE__*/_jsxDEV(AddFreetext, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 66\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateSurvey, \"P8nypiOAHTytM7ptAqQKGc/e54Y=\");\n\n_c = CreateSurvey;\nexport default CreateSurvey;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateSurvey\");","map":{"version":3,"names":["AddInput","AddDropdown","AddFreetext","useTextContext","Container","Stack","Form","Button","ButtonGroup","React","useState","CreateSurvey","surveyTitle","setSurveyTitle","surveyDescription","setSurveyDescription","newSurvey","setNewSurvey","questions","answers","questionType","setQuestionType","handleClick","type","createSurveyTitle","event","target","value","console","log","createSurveyDescription","createQuestion","questionTitle","newQuestion","id","length"],"sources":["C:/Users/liisa/Documents/JavaScript Traning/ReferenceProject/visualizing_surveys/src/views/CreateSurvey.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../App.css';\r\nimport AddInput from '../components/AddInput.js';\r\nimport AddDropdown from '../components/AddDropdown.js';\r\nimport AddFreetext from '../components/AddFreetext.js';\r\n\r\nimport { useTextContext } from '../contexts/TextContext.js';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Stack from 'react-bootstrap/Stack';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nimport { Button, ButtonGroup } from 'react-bootstrap';\r\nimport React, { useState } from \"react\";\r\n\r\n\r\nconst CreateSurvey = () => {\r\n\r\n    const [surveyTitle, setSurveyTitle] = useState(\"\");\r\n    const [surveyDescription, setSurveyDescription] = useState(\"\");\r\n\r\n    const [newSurvey, setNewSurvey] = useState({ surveyTitle: \"\", surveyDescription: \"\", questions: [], answers: [] });\r\n    const [questionType, setQuestionType] = useState(\"\");\r\n    const handleClick = (type) => {\r\n        setQuestionType(type)\r\n\r\n    };\r\n\r\n    //const { questionText } = useTextContext();\r\n    //console.log(questionText);\r\n    //{newSurvey.questions.map}//Tällä listataan kysymykset näkyville\r\n\r\n    const createSurveyTitle = (event) => {\r\n        setSurveyTitle(event.target.value);\r\n        console.log(surveyTitle);\r\n    };\r\n\r\n    const createSurveyDescription = (event) => {\r\n        setSurveyDescription(event.target.value);\r\n        console.log(surveyDescription);\r\n    };\r\n\r\n    const createQuestion = (questionTitle, questionType) => {\r\n        const newQuestion = {\r\n            questionTitle,\r\n            questionType,\r\n            id: newSurvey.questions.length + 1\r\n        };\r\n        setNewSurvey({\r\n            ...newSurvey,\r\n            questions: [...newSurvey.questions, newQuestion]\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className='createSurvey'>\r\n            <Container className='col-md-8 mx-auto my-4'>\r\n                <h4>To create a question, choose what kind of a question do you want to use. The question types are: drop-down list, input field and free text area.</h4>\r\n            </Container>\r\n            <Container>\r\n                <Stack gap={2} className='col-sm-6 mx-auto'>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Give your survey a short and descriptive title:</Form.Label>\r\n                            <Form.Text onSubmit={createSurveyTitle} type=\"text\" placeholder='write title here' />\r\n                            <label htmlFor=\"\">Write a short description of the survey:</label>\r\n                            <textarea onSubmit={createSurveyDescription} name=\"surveyDescription\" id=\"surveyDescription\" cols=\"30\" rows=\"5\"></textarea>\r\n\r\n                            <p>Choose  what kind of a question to add.</p>\r\n\r\n                            <ButtonGroup gap={1} aria-label=\"Basic example\">\r\n                                <Button onClick={() => handleClick(\"dropdown\")} variant=\"primary\">Dropdown + </Button>\r\n                                <Button onClick={() => handleClick(\"input\")} variant=\"primary\">Input + </Button>\r\n                                <Button onClick={() => handleClick(\"freetext\")} variant=\"primary\">Free text + </Button>\r\n                            </ButtonGroup>\r\n                            <div>\r\n                                {(questionType === \"dropdown\") ? <AddDropdown /> : null}\r\n                                {(questionType === \"input\") ? <AddInput /> : null}\r\n                                {(questionType === \"freetext\") ? <AddFreetext /> : null}\r\n                            </div>\r\n                            <input type=\"submit\" value=\"Submit\" />\r\n                        </Form.Group>\r\n                        </Form>\r\n                </Stack>\r\n\r\n            </Container>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default CreateSurvey;"],"mappings":"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"},"metadata":{},"sourceType":"module"}